{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nfunction AnswerHtml(props) {\n  const styles = {\n    backgroundColor: props.isHeld ? 'green' : 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: styles,\n    onClick: props.toggle,\n    value: props.isHeld,\n    className: \"main-btn\",\n    children: props.answers\n  }, nanoid(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = AnswerHtml;\nexport default function GetDataHtml() {\n  _s();\n  const [answer, setAnswer] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://opentdb.com/api.php?amount=5').then(response => response.json()).then(data => {\n      const correctAnswer = data.results.map(pio => pio.correct_answer);\n      const incorrectArrey = data.results.map(pio => pio.incorrect_answers);\n      const newId = nanoid();\n      const typeArray = data.results.map(pio => pio.type);\n      const question = data.results.map(pio => pio.question);\n      const allAnswer = correctAnswer.map((get, index) => ({\n        title: question[index],\n        correct: {\n          value: get,\n          id: newId\n        },\n        incorrec: [incorrectArrey[index].map(pio => ({\n          id: newId,\n          value: pio\n        }))],\n        isHeld: false,\n        type: typeArray[index],\n        id: newId,\n        answers: [...incorrectArrey[index], correctAnswer[index]]\n      }));\n      setAnswer(allAnswer);\n    });\n  }, []);\n  console.log(answer);\n  const finalAnswer = answer.map(x => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"main-title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-flex\",\n        children: /*#__PURE__*/_createElement(AnswerHtml, {\n          ...x,\n          key: nanoid(),\n          toggle: () => ChangeColor(x.answers),\n          id: x.answers,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 16\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  });\n  function ChangeColor(id) {\n    setAnswer(prev => prev.map(newPrev => {\n      for (let i = 0; i < newPrev.length; i++) {\n        return newPrev.answers === id ? {\n          ...newPrev,\n          isHeld: !newPrev.isHeld\n        } : newPrev;\n      }\n      return newPrev;\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: finalAnswer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(GetDataHtml, \"Y2SfHEM8URI8tNHEfF5r19ufvoY=\");\n_c2 = GetDataHtml;\nvar _c, _c2;\n$RefreshReg$(_c, \"AnswerHtml\");\n$RefreshReg$(_c2, \"GetDataHtml\");","map":{"version":3,"names":["React","nanoid","AnswerHtml","props","styles","backgroundColor","isHeld","toggle","answers","GetDataHtml","answer","setAnswer","useState","useEffect","fetch","then","response","json","data","correctAnswer","results","map","pio","correct_answer","incorrectArrey","incorrect_answers","newId","typeArray","type","question","allAnswer","get","index","title","correct","value","id","incorrec","console","log","finalAnswer","x","ChangeColor","prev","newPrev","i","length"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\n\r\nfunction AnswerHtml(props) {\r\n\r\n    const styles = {backgroundColor : props.isHeld ? 'green' :'white'}\r\n    return(\r\n        <button style={styles} onClick={props.toggle} key={nanoid()} value={props.isHeld} className='main-btn'>{props.answers}</button>\r\n    )\r\n}\r\n\r\n \r\n\r\nexport default function GetDataHtml(){\r\n\r\n    const [answer , setAnswer] = React.useState([])\r\n    React.useEffect(()=>{\r\n        fetch('https://opentdb.com/api.php?amount=5')\r\n        .then(response => response.json())\r\n        .then(data => {        \r\n            const correctAnswer = data.results.map(pio => pio.correct_answer)\r\n            const incorrectArrey = data.results.map(pio => pio.incorrect_answers )\r\n            const newId = nanoid()\r\n            const typeArray = data.results.map(pio => pio.type)\r\n            const question = data.results.map(pio => pio.question)          \r\n            const allAnswer = correctAnswer.map((get , index) => ({\r\n              title:question[index] , correct:{value:get , id:newId}, incorrec:[incorrectArrey[index].map((pio) => ({id:newId , value:pio}))] ,isHeld : false , type:typeArray[index] , id:newId, answers : [...incorrectArrey[index] , correctAnswer[index]]\r\n            }))\r\n         setAnswer(allAnswer)\r\n      })\r\n    },[])\r\n    console.log(answer) \r\n    \r\n    const finalAnswer = answer.map(x=>{\r\n        return (\r\n            <div>\r\n            <h3 className='main-title'>{props.title}</h3>\r\n            <div className='main-flex'>\r\n               <AnswerHtml {...x} key={nanoid()} toggle={()=>ChangeColor(x.answers)} id={x.answers}\r\n                />\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n        )  \r\n        })\r\n        function ChangeColor(id) {\r\n           setAnswer(prev => prev.map(newPrev => {\r\n            for(let i =0 ; i < newPrev.length;i++){\r\n                return newPrev.answers === id ? {...newPrev , isHeld:!newPrev.isHeld} : newPrev \r\n            }\r\n              return newPrev\r\n           }))\r\n        }\r\n    return(\r\n        <main>{finalAnswer}</main>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}