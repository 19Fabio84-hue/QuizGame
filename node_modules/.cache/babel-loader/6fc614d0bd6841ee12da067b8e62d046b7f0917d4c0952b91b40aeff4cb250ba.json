{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetDataHtml() {\n  _s();\n  const [answer, setAnswer] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://opentdb.com/api.php?amount=5').then(response => response.json()).then(data => {\n      console.log(data);\n      setAnswer(data.results);\n    });\n  }, []);\n  const [answercomplete, setAnswerComplete] = React.useState(GetIdAnswer);\n  function GetId() {\n    return {\n      question: '',\n      id: nanoid(),\n      isHeld: false,\n      correct: '',\n      incorrect: ''\n    };\n  }\n  function GetIdAnswer() {\n    const newID = [];\n    for (let i = 0; i < 5; i++) {\n      newID.push(GetId());\n    }\n    return newID;\n  }\n  console.log(answercomplete);\n  const NewAnswer = answer.map(x => {\n    return /*#__PURE__*/_createElement(AnswerHtml, {\n      ...x,\n      key: x.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: NewAnswer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(GetDataHtml, \"E26MvE9ae0dUiePYweT9t0rv0mo=\");\n_c = GetDataHtml;\nconst AnswerHtml = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"main-title\",\n      children: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"main-btn\",\n        children: props.incorrect_answers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"main-btn\",\n        children: props.incorrect_answers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"main-btn\",\n        children: props.incorrect_answers[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"main-btn\",\n        children: props.correct_answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, props.key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_c2 = AnswerHtml;\nvar _c, _c2;\n$RefreshReg$(_c, \"GetDataHtml\");\n$RefreshReg$(_c2, \"AnswerHtml\");","map":{"version":3,"names":["React","nanoid","GetDataHtml","answer","setAnswer","useState","useEffect","fetch","then","response","json","data","console","log","results","answercomplete","setAnswerComplete","GetIdAnswer","GetId","question","id","isHeld","correct","incorrect","newID","i","push","NewAnswer","map","x","toString","AnswerHtml","props","incorrect_answers","correct_answer","key"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\nexport default function GetDataHtml(){\r\n    const [answer , setAnswer] = React.useState([])\r\n    React.useEffect(()=>{\r\n        fetch('https://opentdb.com/api.php?amount=5')\r\n        .then(response => response.json())\r\n        .then(data => {console.log(data)\r\n         setAnswer(data.results)\r\n      } )\r\n    },[])\r\n\r\n    const [answercomplete , setAnswerComplete] = React.useState(GetIdAnswer)\r\n    function GetId(){\r\n            return {question :'' ,id:nanoid() ,isHeld:false , correct : '' , incorrect:''}\r\n        }\r\n    function GetIdAnswer(){\r\n        const newID = []\r\n        for(let i =0 ; i< 5 ; i++){\r\n            newID.push(GetId())\r\n        }\r\n        return newID\r\n    }\r\n       \r\n    \r\n  \r\n    console.log(answercomplete)\r\n    \r\n    const NewAnswer = answer.map(x=>{\r\n        return <AnswerHtml {...x}\r\n        key={x.toString()} />\r\n        })\r\n    return(\r\n        <main>{NewAnswer}</main>\r\n    )\r\n}\r\n\r\nconst AnswerHtml = (props) =>{\r\n    return (\r\n        <div  key={props.key}>\r\n            <h3 className='main-title'>{props.question}</h3>\r\n            <div className='main-flex'>\r\n                <button className='main-btn'>{props.incorrect_answers[0]}</button>\r\n                <button className='main-btn'>{props.incorrect_answers[1]}</button>\r\n                <button className='main-btn'>{props.incorrect_answers[2]}</button>\r\n                <button className='main-btn'>{props.correct_answer}</button>\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAAA;AAAA;AAC/B,eAAe,SAASC,WAAW,GAAE;EAAA;EACjC,MAAM,CAACC,MAAM,EAAGC,SAAS,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC,EAAE,CAAC;EAC/CL,KAAK,CAACM,SAAS,CAAC,MAAI;IAChBC,KAAK,CAAC,sCAAsC,CAAC,CAC5CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MAACC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAC/BP,SAAS,CAACO,IAAI,CAACG,OAAO,CAAC;IAC1B,CAAC,CAAE;EACL,CAAC,EAAC,EAAE,CAAC;EAEL,MAAM,CAACC,cAAc,EAAGC,iBAAiB,CAAC,GAAGhB,KAAK,CAACK,QAAQ,CAACY,WAAW,CAAC;EACxE,SAASC,KAAK,GAAE;IACR,OAAO;MAACC,QAAQ,EAAE,EAAE;MAAEC,EAAE,EAACnB,MAAM,EAAE;MAAEoB,MAAM,EAAC,KAAK;MAAGC,OAAO,EAAG,EAAE;MAAGC,SAAS,EAAC;IAAE,CAAC;EAClF;EACJ,SAASN,WAAW,GAAE;IAClB,MAAMO,KAAK,GAAG,EAAE;IAChB,KAAI,IAAIC,CAAC,GAAE,CAAC,EAAGA,CAAC,GAAE,CAAC,EAAGA,CAAC,EAAE,EAAC;MACtBD,KAAK,CAACE,IAAI,CAACR,KAAK,EAAE,CAAC;IACvB;IACA,OAAOM,KAAK;EAChB;EAIAZ,OAAO,CAACC,GAAG,CAACE,cAAc,CAAC;EAE3B,MAAMY,SAAS,GAAGxB,MAAM,CAACyB,GAAG,CAACC,CAAC,IAAE;IAC5B,oBAAO,eAAC,UAAU;MAAA,GAAKA,CAAC;MACxB,GAAG,EAAEA,CAAC,CAACC,QAAQ,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EACrB,CAAC,CAAC;EACN,oBACI;IAAA,UAAOH;EAAS;IAAA;IAAA;IAAA;EAAA,QAAQ;AAEhC;AAAC,GAjCuBzB,WAAW;AAAA,KAAXA,WAAW;AAmCnC,MAAM6B,UAAU,GAAIC,KAAK,IAAI;EACzB,oBACI;IAAA,wBACI;MAAI,SAAS,EAAC,YAAY;MAAA,UAAEA,KAAK,CAACb;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAM,eAChD;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAQ,SAAS,EAAC,UAAU;QAAA,UAAEa,KAAK,CAACC,iBAAiB,CAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAU,eAClE;QAAQ,SAAS,EAAC,UAAU;QAAA,UAAED,KAAK,CAACC,iBAAiB,CAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAU,eAClE;QAAQ,SAAS,EAAC,UAAU;QAAA,UAAED,KAAK,CAACC,iBAAiB,CAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAU,eAClE;QAAQ,SAAS,EAAC,UAAU;QAAA,UAAED,KAAK,CAACE;MAAc;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1D,eACN;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA,GAREF,KAAK,CAACG,GAAG;IAAA;IAAA;IAAA;EAAA,QASd;AAEd,CAAC;AAAA,MAbKJ,UAAU;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}