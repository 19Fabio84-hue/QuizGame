{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst AnswerHtml = props => {\n  _s();\n  const [stile, setStile] = React.useState(false);\n  function ChangeColor() {\n    setStile(!stile);\n  }\n  const styles = {\n    backgroundColor: stile ? 'green' : 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"main-title\",\n      children: props.answers[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: ChangeColor,\n        className: \"main-btn\",\n        children: props.answers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: ChangeColor,\n        className: \"main-btn\",\n        children: props.answers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: ChangeColor,\n        className: \"main-btn\",\n        children: props.answers[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: ChangeColor,\n        className: \"main-btn\",\n        children: props.answers[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_s(AnswerHtml, \"6VeO3lUilwD5V5IYMPY9rIwnJxI=\");\n_c = AnswerHtml;\nexport default function GetDataHtml() {\n  _s2();\n  const [answer, setAnswer] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://opentdb.com/api.php?amount=5').then(response => response.json()).then(data => {\n      console.log(data);\n      const correctAnswer = data.results.map(pio => pio.correct_answer);\n      const IncorrectArrey = data.results.map(pio => pio.incorrect_answers);\n      const typeArray = data.results.map(pio => pio.type);\n      const question = data.results.map(pio => pio.question);\n      const allAnswer = correctAnswer.map((get, index) => ({\n        title: question[index],\n        correct: get,\n        Incorrec: IncorrectArrey[index],\n        isHHeld: false,\n        type: typeArray[index],\n        id: nanoid(),\n        answers: [get, ...IncorrectArrey[index]]\n      }));\n      setAnswer(allAnswer);\n    });\n  }, []);\n  console.log(answer);\n  const [newAnswer, setNewAnswer] = React.useState();\n  React.useEffect(() => {\n    setNewAnswer(allAnswer);\n  }, [answer]);\n  console.log(newAnswer);\n  const finalAnswer = newAnswer.map(x => {\n    return /*#__PURE__*/_createElement(AnswerHtml, {\n      ...x,\n      key: x.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: finalAnswer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s2(GetDataHtml, \"FrSHYVxCMzHAc6uT9RwCKTCldoY=\");\n_c2 = GetDataHtml;\nvar _c, _c2;\n$RefreshReg$(_c, \"AnswerHtml\");\n$RefreshReg$(_c2, \"GetDataHtml\");","map":{"version":3,"names":["React","nanoid","AnswerHtml","props","stile","setStile","useState","ChangeColor","styles","backgroundColor","answers","GetDataHtml","answer","setAnswer","useEffect","fetch","then","response","json","data","console","log","correctAnswer","results","map","pio","correct_answer","IncorrectArrey","incorrect_answers","typeArray","type","question","allAnswer","get","index","title","correct","Incorrec","isHHeld","id","newAnswer","setNewAnswer","finalAnswer","x"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\n\r\nconst AnswerHtml = (props) =>{\r\n    const [stile , setStile] = React.useState(false)\r\n    function ChangeColor(){\r\n       setStile(!stile)\r\n    }\r\n    const styles = {backgroundColor : stile ? 'green' :'white'}\r\n    return (\r\n        <div>\r\n            <h3 className='main-title'>{props.answers[0]\r\n}</h3>\r\n            <div className='main-flex'>\r\n                <button style={styles} onClick={ChangeColor} className='main-btn'>{props.answers\r\n[0]}</button>\r\n                <button style={styles} onClick={ChangeColor} className='main-btn'>{props.answers\r\n[1]}</button>\r\n                <button style={styles} onClick={ChangeColor} className='main-btn'>{props.answers\r\n[2]}</button>\r\n                <button style={styles} onClick={ChangeColor} className='main-btn'>{props.answers\r\n[2]}</button>\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function GetDataHtml(){\r\n\r\n    const [answer , setAnswer] = React.useState([])\r\n    React.useEffect(()=>{\r\n        fetch('https://opentdb.com/api.php?amount=5')\r\n        .then(response => response.json())\r\n        .then(data => {console.log(data)\r\n            const correctAnswer = data.results.map(pio => pio.correct_answer )\r\n            const IncorrectArrey = data.results.map(pio => pio.incorrect_answers )\r\n            const typeArray = data.results.map(pio => pio.type)\r\n            const question = data.results.map(pio => pio.question)\r\n            const allAnswer = correctAnswer.map((get , index) => ({\r\n              title:question[index] , correct:get, Incorrec:IncorrectArrey[index] ,isHHeld : false , type:typeArray[index] , id:nanoid(), answers : [get , ...IncorrectArrey[index]]\r\n            }))\r\n\r\n         setAnswer(allAnswer)\r\n      })\r\n    },[])\r\n    console.log(answer)\r\n    const [newAnswer , setNewAnswer] = React.useState()\r\n    React.useEffect(()=>{\r\n       \r\n        setNewAnswer(allAnswer)\r\n    },[answer])\r\n    console.log(newAnswer)\r\n    \r\n    \r\n    const finalAnswer = newAnswer.map(x=>{\r\n        return <AnswerHtml {...x} key={x.id}\r\n         />\r\n        })\r\n    return(\r\n        <main>{finalAnswer}</main>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}