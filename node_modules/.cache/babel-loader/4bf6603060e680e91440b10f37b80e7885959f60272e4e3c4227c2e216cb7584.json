{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\domanda.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Domanda(props) {\n  _s();\n  console.log(props);\n  const styles = {\n    backgroundColor: props.isHeld ? ' green' : '#FFF'\n  };\n  const [oli, setoli] = React.useState(getValueHtml());\n  function getValueArray() {\n    return {\n      id: nanoid(),\n      isHeld: false\n    };\n  }\n  function getValueHtml() {\n    const newValue = [];\n    for (let i = 0; i < 4; i++) {\n      newValue.push(getValueArray());\n    }\n  }\n  console.log(oli);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main\",\n        onClick: props.toggle,\n        children: props.value\n      }, props.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        className: \"main-btn\",\n        onClick: props.toggle,\n        children: props.answer[0]\n      }, props.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        className: \"main-btn\",\n        onClick: props.toggle,\n        children: props.answer[1]\n      }, props.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        className: \"main-btn\",\n        onClick: props.toggle,\n        children: props.answer[2]\n      }, props.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        className: \"main-btn\",\n        onClick: props.toggle,\n        children: props.answer[3]\n      }, props.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n}\n_s(Domanda, \"3SzVylrD+b1k5YPDxdDsWuGfZw4=\");\n_c = Domanda;\nvar _c;\n$RefreshReg$(_c, \"Domanda\");","map":{"version":3,"names":["React","nanoid","Domanda","props","console","log","styles","backgroundColor","isHeld","oli","setoli","useState","getValueHtml","getValueArray","id","newValue","i","push","toggle","value","answer"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/domanda.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\n\r\nexport default function Domanda(props){\r\n    console.log(props)\r\n    const styles = { backgroundColor : props.isHeld ?  ' green' : '#FFF'}\r\n    const [oli , setoli] = React.useState(getValueHtml())\r\n    function getValueArray(){\r\n        return {id:nanoid() , isHeld:false}\r\n    }\r\n    function getValueHtml(){\r\n        const newValue = []\r\n        for(let i = 0 ; i < 4; i++){\r\n            newValue.push(getValueArray())\r\n        }\r\n    }\r\n    console.log(oli)\r\n    return (<main>\r\n        <div>\r\n            <h2  className='main' key={props.id} onClick={props.toggle}>{props.value}</h2>\r\n            <button style={styles} className='main-btn' key={props.id} onClick={props.toggle}>{props.answer[0]}</button>\r\n            <button style={styles} className='main-btn' key={props.id} onClick={props.toggle}>{props.answer[1]}</button>\r\n            <button style={styles} className='main-btn' key={props.id} onClick={props.toggle}>{props.answer[2]}</button>\r\n            <button style={styles} className='main-btn' key={props.id} onClick={props.toggle}>{props.answer[3]}</button>\r\n        </div>       \r\n    </main>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAAA;AAE/B,eAAe,SAASC,OAAO,CAACC,KAAK,EAAC;EAAA;EAClCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAMG,MAAM,GAAG;IAAEC,eAAe,EAAGJ,KAAK,CAACK,MAAM,GAAI,QAAQ,GAAG;EAAM,CAAC;EACrE,MAAM,CAACC,GAAG,EAAGC,MAAM,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAACC,YAAY,EAAE,CAAC;EACrD,SAASC,aAAa,GAAE;IACpB,OAAO;MAACC,EAAE,EAACb,MAAM,EAAE;MAAGO,MAAM,EAAC;IAAK,CAAC;EACvC;EACA,SAASI,YAAY,GAAE;IACnB,MAAMG,QAAQ,GAAG,EAAE;IACnB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;MACvBD,QAAQ,CAACE,IAAI,CAACJ,aAAa,EAAE,CAAC;IAClC;EACJ;EACAT,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;EAChB,oBAAQ;IAAA,uBACJ;MAAA,wBACI;QAAK,SAAS,EAAC,MAAM;QAAgB,OAAO,EAAEN,KAAK,CAACe,MAAO;QAAA,UAAEf,KAAK,CAACgB;MAAK,GAA7ChB,KAAK,CAACW,EAAE;QAAA;QAAA;QAAA;MAAA,QAA2C,eAC9E;QAAQ,KAAK,EAAER,MAAO;QAAC,SAAS,EAAC,UAAU;QAAgB,OAAO,EAAEH,KAAK,CAACe,MAAO;QAAA,UAAEf,KAAK,CAACiB,MAAM,CAAC,CAAC;MAAC,GAAjDjB,KAAK,CAACW,EAAE;QAAA;QAAA;QAAA;MAAA,QAAmD,eAC5G;QAAQ,KAAK,EAAER,MAAO;QAAC,SAAS,EAAC,UAAU;QAAgB,OAAO,EAAEH,KAAK,CAACe,MAAO;QAAA,UAAEf,KAAK,CAACiB,MAAM,CAAC,CAAC;MAAC,GAAjDjB,KAAK,CAACW,EAAE;QAAA;QAAA;QAAA;MAAA,QAAmD,eAC5G;QAAQ,KAAK,EAAER,MAAO;QAAC,SAAS,EAAC,UAAU;QAAgB,OAAO,EAAEH,KAAK,CAACe,MAAO;QAAA,UAAEf,KAAK,CAACiB,MAAM,CAAC,CAAC;MAAC,GAAjDjB,KAAK,CAACW,EAAE;QAAA;QAAA;QAAA;MAAA,QAAmD,eAC5G;QAAQ,KAAK,EAAER,MAAO;QAAC,SAAS,EAAC,UAAU;QAAgB,OAAO,EAAEH,KAAK,CAACe,MAAO;QAAA,UAAEf,KAAK,CAACiB,MAAM,CAAC,CAAC;MAAC,GAAjDjB,KAAK,CAACW,EAAE;QAAA;QAAA;QAAA;MAAA,QAAmD;IAAA;MAAA;MAAA;MAAA;IAAA;EAC1G;IAAA;IAAA;IAAA;EAAA,QACH;AAEX;AAAC,GAxBuBZ,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}