{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport Button from './button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetQuizMenu() {\n  _s();\n  const [quizdata, setData] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://opentdb.com/api.php?amount=5').then(response => response.json()).then(data => setData(data.results));\n  }, []);\n  console.log(quizdata);\n  const [prova, setProva] = React.useState(proviamo);\n  function proviamo() {\n    const correct = quizdata.map(poi => poi.correct_answer);\n    console.log(correct);\n  }\n  const [idButton, setIdButton] = React.useState(idLoop());\n  function getIdisHold() {\n    return {\n      id: nanoid(),\n      isHeld: false\n    };\n  }\n  function idLoop() {\n    const idArrayButton = [];\n    for (let i = 0; i < 4; i++) {\n      idArrayButton.push(getIdisHold());\n    }\n    return idArrayButton;\n  }\n  const element = idButton.map(prev => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      id: prev.id,\n      isHeld: prev.isHeld,\n      toggle: () => ChangeColor(prev.id)\n    }, prev.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this);\n  });\n  function ChangeColor(id) {\n    setIdButton(prev => prev.map(get => {\n      return get.id === id ? {\n        ...get,\n        isHeld: !get.isHeld\n      } : get;\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n}\n_s(GetQuizMenu, \"knAICUFc6OyqvnS7Qhf5nqXhFAs=\");\n_c = GetQuizMenu;\nvar _c;\n$RefreshReg$(_c, \"GetQuizMenu\");","map":{"version":3,"names":["React","nanoid","Button","GetQuizMenu","quizdata","setData","useState","useEffect","fetch","then","response","json","data","results","console","log","prova","setProva","proviamo","correct","map","poi","correct_answer","idButton","setIdButton","idLoop","getIdisHold","id","isHeld","idArrayButton","i","push","element","prev","ChangeColor","get"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid} from 'nanoid'\r\nimport Button from './button'\r\n\r\n\r\nexport default function GetQuizMenu(){\r\n     \r\n    const [quizdata , setData] = React.useState([])\r\n     \r\n      React.useEffect(()=>{\r\n        fetch('https://opentdb.com/api.php?amount=5')\r\n         .then(response => response.json())\r\n         .then(data => setData(data.results))\r\n      },[])\r\n      console.log(quizdata)\r\n      const [prova ,setProva] =React.useState(proviamo)\r\n      function proviamo(){\r\n        const correct = quizdata.map(poi=> poi.correct_answer)\r\n        console.log(correct)\r\n      }\r\n\r\n   \r\n   const [idButton , setIdButton] = React.useState(idLoop())\r\n\r\n   function getIdisHold(){\r\n    return {id:nanoid() , isHeld:false}\r\n   }\r\n\r\n   function idLoop(){\r\n    const idArrayButton = []\r\n    for(let i = 0 ; i< 4 ; i++){\r\n        idArrayButton.push(getIdisHold())\r\n    }\r\n    return idArrayButton\r\n   }\r\n    \r\n    const element = idButton.map(prev =>{        \r\n        return( <Button\r\n             id={prev.id}\r\n              key={prev.id}\r\n               isHeld={prev.isHeld}\r\n                toggle={()=>ChangeColor(prev.id)}\r\n                 />)\r\n    })\r\n    function ChangeColor(id){\r\n        setIdButton(prev=> prev.map(get => {\r\n            return get.id === id ? {...get , isHeld:!get.isHeld} : get\r\n        }))\r\n    }\r\n    return (<div>{element}</div>) \r\n}\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAO,QAAQ;AAC9B,OAAOC,MAAM,MAAM,UAAU;AAAA;AAG7B,eAAe,SAASC,WAAW,GAAE;EAAA;EAEjC,MAAM,CAACC,QAAQ,EAAGC,OAAO,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,EAAE,CAAC;EAE7CN,KAAK,CAACO,SAAS,CAAC,MAAI;IAClBC,KAAK,CAAC,sCAAsC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,OAAO,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC;EACvC,CAAC,EAAC,EAAE,CAAC;EACLC,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;EACrB,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAEjB,KAAK,CAACM,QAAQ,CAACY,QAAQ,CAAC;EACjD,SAASA,QAAQ,GAAE;IACjB,MAAMC,OAAO,GAAGf,QAAQ,CAACgB,GAAG,CAACC,GAAG,IAAGA,GAAG,CAACC,cAAc,CAAC;IACtDR,OAAO,CAACC,GAAG,CAACI,OAAO,CAAC;EACtB;EAGH,MAAM,CAACI,QAAQ,EAAGC,WAAW,CAAC,GAAGxB,KAAK,CAACM,QAAQ,CAACmB,MAAM,EAAE,CAAC;EAEzD,SAASC,WAAW,GAAE;IACrB,OAAO;MAACC,EAAE,EAAC1B,MAAM,EAAE;MAAG2B,MAAM,EAAC;IAAK,CAAC;EACpC;EAEA,SAASH,MAAM,GAAE;IAChB,MAAMI,aAAa,GAAG,EAAE;IACxB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAE,CAAC,EAAGA,CAAC,EAAE,EAAC;MACvBD,aAAa,CAACE,IAAI,CAACL,WAAW,EAAE,CAAC;IACrC;IACA,OAAOG,aAAa;EACrB;EAEC,MAAMG,OAAO,GAAGT,QAAQ,CAACH,GAAG,CAACa,IAAI,IAAG;IAChC,oBAAQ,QAAC,MAAM;MACV,EAAE,EAAEA,IAAI,CAACN,EAAG;MAEV,MAAM,EAAEM,IAAI,CAACL,MAAO;MACnB,MAAM,EAAE,MAAIM,WAAW,CAACD,IAAI,CAACN,EAAE;IAAE,GAF9BM,IAAI,CAACN,EAAE;MAAA;MAAA;MAAA;IAAA,QAGP;EACf,CAAC,CAAC;EACF,SAASO,WAAW,CAACP,EAAE,EAAC;IACpBH,WAAW,CAACS,IAAI,IAAGA,IAAI,CAACb,GAAG,CAACe,GAAG,IAAI;MAC/B,OAAOA,GAAG,CAACR,EAAE,KAAKA,EAAE,GAAG;QAAC,GAAGQ,GAAG;QAAGP,MAAM,EAAC,CAACO,GAAG,CAACP;MAAM,CAAC,GAAGO,GAAG;IAC9D,CAAC,CAAC,CAAC;EACP;EACA,oBAAQ;IAAA,UAAMH;EAAO;IAAA;IAAA;IAAA;EAAA,QAAO;AAChC;AAAC,GA7CuB7B,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}