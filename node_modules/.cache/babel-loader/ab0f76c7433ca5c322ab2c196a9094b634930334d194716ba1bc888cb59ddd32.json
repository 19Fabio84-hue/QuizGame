{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport Button from './button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetQuizMenu() {\n  _s();\n  const [quizdata, setData] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://opentdb.com/api.php?amount=5').then(response => response.json()).then(data => setData(data.results));\n  }, []);\n  //   console.log(quizdata)\n\n  const provetta = quizdata.map(_ref => {\n    let {\n      correct_answer,\n      incorrect_answers\n    } = _ref;\n    const proviamo = [correct_answer, ...incorrect_answers];\n    return shuffleArray(proviamo);\n  });\n  //   console.log(provetta)\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n  const [idButton, setIdButton] = React.useState(idLoop());\n  function getIdisHold() {\n    return {\n      id: nanoid(),\n      isHeld: false\n    };\n  }\n  function idLoop() {\n    const idArrayButton = [];\n    for (let i = 0; i < 4; i++) {\n      idArrayButton.push(getIdisHold());\n    }\n    return idArrayButton;\n  }\n  const element = provetta.map(prev => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      id: nanoid(),\n      isHeld: prev.isHeld,\n      toggle: () => ChangeColor(prev.id)\n    }, prev[i], false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this);\n  });\n  function ChangeColor(id) {\n    setIdButton(prev => prev.map(get => {\n      return get.id === id ? {\n        ...get,\n        isHeld: !get.isHeld\n      } : get;\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(GetQuizMenu, \"26fdZlD+qsjq2/BC3PcIMfzATGc=\");\n_c = GetQuizMenu;\nvar _c;\n$RefreshReg$(_c, \"GetQuizMenu\");","map":{"version":3,"names":["React","nanoid","Button","GetQuizMenu","quizdata","setData","useState","useEffect","fetch","then","response","json","data","results","provetta","map","correct_answer","incorrect_answers","proviamo","shuffleArray","array","i","length","j","Math","floor","random","idButton","setIdButton","idLoop","getIdisHold","id","isHeld","idArrayButton","push","element","prev","ChangeColor","get"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid} from 'nanoid'\r\nimport Button from './button'\r\n\r\n\r\nexport default function GetQuizMenu(){\r\n     \r\n    const [quizdata , setData] = React.useState([])\r\n   \r\n      React.useEffect(()=>{\r\n        fetch('https://opentdb.com/api.php?amount=5')\r\n         .then(response => response.json())\r\n         .then(data => setData(data.results))\r\n      },[])\r\n    //   console.log(quizdata)\r\n        \r\n      const provetta = quizdata.map(({correct_answer,incorrect_answers})=>{\r\n        const proviamo = [correct_answer,...incorrect_answers]\r\n        return shuffleArray(proviamo)\r\n      })\r\n    //   console.log(provetta)\r\n      function shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n      }    \r\n   \r\n   const [idButton , setIdButton] = React.useState(idLoop())\r\n\r\n   function getIdisHold(){\r\n    return {id:nanoid() , isHeld:false}\r\n   }\r\n\r\n   function idLoop(){\r\n    const idArrayButton = []\r\n    for(let i = 0 ; i< 4 ; i++){\r\n        idArrayButton.push(getIdisHold())\r\n    }\r\n    return idArrayButton\r\n   }\r\n    \r\n    const element = provetta.map(prev =>{        \r\n        return(   \r\n          <Button id={nanoid()}  key={prev[i]}  isHeld={prev.isHeld} toggle={()=>ChangeColor(prev.id)}  />             \r\n             \r\n            )\r\n    })\r\n    function ChangeColor(id){\r\n        setIdButton(prev=> prev.map(get => {\r\n            return get.id === id ? {...get , isHeld:!get.isHeld} : get\r\n        }))\r\n    }\r\n    return (\r\n    <div>\r\n        {element}\r\n    </div>\r\n    \r\n    ) \r\n}\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAO,QAAQ;AAC9B,OAAOC,MAAM,MAAM,UAAU;AAAA;AAG7B,eAAe,SAASC,WAAW,GAAE;EAAA;EAEjC,MAAM,CAACC,QAAQ,EAAGC,OAAO,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,EAAE,CAAC;EAE7CN,KAAK,CAACO,SAAS,CAAC,MAAI;IAClBC,KAAK,CAAC,sCAAsC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,OAAO,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC;EACvC,CAAC,EAAC,EAAE,CAAC;EACP;;EAEE,MAAMC,QAAQ,GAAGV,QAAQ,CAACW,GAAG,CAAC,QAAsC;IAAA,IAArC;MAACC,cAAc;MAACC;IAAiB,CAAC;IAC/D,MAAMC,QAAQ,GAAG,CAACF,cAAc,EAAC,GAAGC,iBAAiB,CAAC;IACtD,OAAOE,YAAY,CAACD,QAAQ,CAAC;EAC/B,CAAC,CAAC;EACJ;EACE,SAASC,YAAY,CAACC,KAAK,EAAE;IAC3B,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACzC,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,KAAK,CAACG,CAAC,CAAC,EAAEH,KAAK,CAACC,CAAC,CAAC,CAAC;IAC7C;IACA,OAAOD,KAAK;EACd;EAEH,MAAM,CAACO,QAAQ,EAAGC,WAAW,CAAC,GAAG5B,KAAK,CAACM,QAAQ,CAACuB,MAAM,EAAE,CAAC;EAEzD,SAASC,WAAW,GAAE;IACrB,OAAO;MAACC,EAAE,EAAC9B,MAAM,EAAE;MAAG+B,MAAM,EAAC;IAAK,CAAC;EACpC;EAEA,SAASH,MAAM,GAAE;IAChB,MAAMI,aAAa,GAAG,EAAE;IACxB,KAAI,IAAIZ,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAE,CAAC,EAAGA,CAAC,EAAE,EAAC;MACvBY,aAAa,CAACC,IAAI,CAACJ,WAAW,EAAE,CAAC;IACrC;IACA,OAAOG,aAAa;EACrB;EAEC,MAAME,OAAO,GAAGrB,QAAQ,CAACC,GAAG,CAACqB,IAAI,IAAG;IAChC,oBACE,QAAC,MAAM;MAAC,EAAE,EAAEnC,MAAM,EAAG;MAAiB,MAAM,EAAEmC,IAAI,CAACJ,MAAO;MAAC,MAAM,EAAE,MAAIK,WAAW,CAACD,IAAI,CAACL,EAAE;IAAE,GAAhEK,IAAI,CAACf,CAAC,CAAC;MAAA;MAAA;MAAA;IAAA,QAA6D;EAGtG,CAAC,CAAC;EACF,SAASgB,WAAW,CAACN,EAAE,EAAC;IACpBH,WAAW,CAACQ,IAAI,IAAGA,IAAI,CAACrB,GAAG,CAACuB,GAAG,IAAI;MAC/B,OAAOA,GAAG,CAACP,EAAE,KAAKA,EAAE,GAAG;QAAC,GAAGO,GAAG;QAAGN,MAAM,EAAC,CAACM,GAAG,CAACN;MAAM,CAAC,GAAGM,GAAG;IAC9D,CAAC,CAAC,CAAC;EACP;EACA,oBACA;IAAA,UACKH;EAAO;IAAA;IAAA;IAAA;EAAA,QACN;AAGV;AAAC,GAvDuBhC,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}