{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Button from '../button/setButtons';\nimport Domanda from './domanda';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetQuizMenu() {\n  _s();\n  const [quizdata, setData] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://opentdb.com/api.php?amount=5').then(response => response.json()).then(data => setData(data.results));\n  }, []);\n  const questionHtml = quizdata.map(poi => poi.question);\n  const provetta = quizdata.map(_ref => {\n    let {\n      correct_answer,\n      incorrect_answers\n    } = _ref;\n    const proviamo = [correct_answer, ...incorrect_answers];\n    return shuffleArray(proviamo);\n  });\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n  const arrayFinale = provetta.map((get, index) => {\n    return {\n      question: questionHtml[index],\n      answer: get\n    };\n  });\n  console.log(arrayFinale);\n  const getAnswers = arrayFinale.map(prev => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-ctn\",\n      children: [/*#__PURE__*/_jsxDEV(Domanda, {\n        value: prev.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-ctn\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          value: prev.answer[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          value: prev.answer[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          value: prev.answer[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          value: prev.answer[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  });\n\n  //  const getAnswers = provetta.map(prev => {\n  //   return <div className='btn-ctn'>\n  //          <Button value={prev[0]}/>\n  //          <Button value={prev[1]}/>\n  //          <Button value={prev[2]}/>\n  //          <Button value={prev[3]}/>\n  //          </div>})\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [getAnswers, /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Check Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(GetQuizMenu, \"n+R8LNVtQz5PYSNXcEUuXWXycQo=\");\n_c = GetQuizMenu;\nvar _c;\n$RefreshReg$(_c, \"GetQuizMenu\");","map":{"version":3,"names":["React","Button","Domanda","GetQuizMenu","quizdata","setData","useState","useEffect","fetch","then","response","json","data","results","questionHtml","map","poi","question","provetta","correct_answer","incorrect_answers","proviamo","shuffleArray","array","i","length","j","Math","floor","random","arrayFinale","get","index","answer","console","log","getAnswers","prev"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\nimport Button from '../button/setButtons'\r\nimport Domanda from './domanda'\r\n\r\nexport default function GetQuizMenu(){\r\n     \r\n    const [quizdata , setData] = React.useState([])\r\n      React.useEffect( () =>{\r\n         fetch('https://opentdb.com/api.php?amount=5')\r\n          .then(response => response.json())\r\n          .then(data=> setData(data.results) )\r\n        \r\n      },[]) \r\n      const questionHtml = quizdata.map(poi=> poi.question)\r\n      const provetta =  quizdata.map(({correct_answer,incorrect_answers})=>{\r\n        const proviamo = [correct_answer,...incorrect_answers]\r\n        return shuffleArray(proviamo)\r\n      })      \r\n      function shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n      } \r\n      const arrayFinale = provetta.map((get,index)=> {\r\n        return {question:questionHtml[index] , answer:get}\r\n      })\r\n      console.log(arrayFinale)\r\n        \r\n      const getAnswers = arrayFinale.map(prev=>{\r\n        return <div className='main-ctn'>\r\n                  <Domanda  value={prev.question}/>\r\n                  <div className='btn-ctn'>\r\n                     <Button  value={prev.answer[0]}/>\r\n                     <Button  value={prev.answer[1]}/>\r\n                     <Button  value={prev.answer[2]}/>\r\n                     <Button  value={prev.answer[3]}/>\r\n                  </div>\r\n                     <hr></hr>\r\n\r\n        </div>\r\n      })\r\n\r\n      //  const getAnswers = provetta.map(prev => {\r\n      //   return <div className='btn-ctn'>\r\n      //          <Button value={prev[0]}/>\r\n      //          <Button value={prev[1]}/>\r\n      //          <Button value={prev[2]}/>\r\n      //          <Button value={prev[3]}/>\r\n      //          </div>})\r\n    \r\n    \r\n      \r\n      return (\r\n        <main>\r\n           {getAnswers}\r\n           <button>Check Answer</button>\r\n        </main>\r\n      )\r\n}\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,WAAW;AAAA;AAE/B,eAAe,SAASC,WAAW,GAAE;EAAA;EAEjC,MAAM,CAACC,QAAQ,EAAGC,OAAO,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,EAAE,CAAC;EAC7CN,KAAK,CAACO,SAAS,CAAE,MAAK;IACnBC,KAAK,CAAC,sCAAsC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAGP,OAAO,CAACO,IAAI,CAACC,OAAO,CAAC,CAAE;EAExC,CAAC,EAAC,EAAE,CAAC;EACL,MAAMC,YAAY,GAAGV,QAAQ,CAACW,GAAG,CAACC,GAAG,IAAGA,GAAG,CAACC,QAAQ,CAAC;EACrD,MAAMC,QAAQ,GAAId,QAAQ,CAACW,GAAG,CAAC,QAAsC;IAAA,IAArC;MAACI,cAAc;MAACC;IAAiB,CAAC;IAChE,MAAMC,QAAQ,GAAG,CAACF,cAAc,EAAC,GAAGC,iBAAiB,CAAC;IACtD,OAAOE,YAAY,CAACD,QAAQ,CAAC;EAC/B,CAAC,CAAC;EACF,SAASC,YAAY,CAACC,KAAK,EAAE;IAC3B,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACzC,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,KAAK,CAACG,CAAC,CAAC,EAAEH,KAAK,CAACC,CAAC,CAAC,CAAC;IAC7C;IACA,OAAOD,KAAK;EACd;EACA,MAAMO,WAAW,GAAGZ,QAAQ,CAACH,GAAG,CAAC,CAACgB,GAAG,EAACC,KAAK,KAAI;IAC7C,OAAO;MAACf,QAAQ,EAACH,YAAY,CAACkB,KAAK,CAAC;MAAGC,MAAM,EAACF;IAAG,CAAC;EACpD,CAAC,CAAC;EACFG,OAAO,CAACC,GAAG,CAACL,WAAW,CAAC;EAExB,MAAMM,UAAU,GAAGN,WAAW,CAACf,GAAG,CAACsB,IAAI,IAAE;IACvC,oBAAO;MAAK,SAAS,EAAC,UAAU;MAAA,wBACtB,QAAC,OAAO;QAAE,KAAK,EAAEA,IAAI,CAACpB;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE,eACjC;QAAK,SAAS,EAAC,SAAS;QAAA,wBACrB,QAAC,MAAM;UAAE,KAAK,EAAEoB,IAAI,CAACJ,MAAM,CAAC,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,eACjC,QAAC,MAAM;UAAE,KAAK,EAAEI,IAAI,CAACJ,MAAM,CAAC,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,eACjC,QAAC,MAAM;UAAE,KAAK,EAAEI,IAAI,CAACJ,MAAM,CAAC,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,eACjC,QAAC,MAAM;UAAE,KAAK,EAAEI,IAAI,CAACJ,MAAM,CAAC,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9B,eACH;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhB;EACR,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA,oBACE;IAAA,WACIG,UAAU,eACX;MAAA,UAAQ;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACzB;AAEf;AAAC,GAxDuBjC,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}