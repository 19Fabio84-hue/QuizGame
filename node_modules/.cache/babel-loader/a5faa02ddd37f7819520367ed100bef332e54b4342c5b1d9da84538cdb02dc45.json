{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport Button from './button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetQuizMenu() {\n  _s();\n  const [idButton, setIdButton] = React.useState(idLoop);\n  function getIdisHold() {\n    return {\n      id: nanoid(),\n      isHeld: false\n    };\n  }\n  function idLoop() {\n    const idArrayButton = [];\n    for (let i = 0; i < 4; i++) {\n      idArrayButton.push(getIdisHold);\n    }\n    return idArrayButton;\n  }\n  const element = idButton.map(prev => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      id: prev.id,\n      isHeld: prev.isHeld,\n      toggle: () => ChangeColor(prev.id)\n    }, prev.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 8\n  }, this);\n}\n_s(GetQuizMenu, \"bMWUyZeLM5j0Br3IDs1+OlkLYQQ=\");\n_c = GetQuizMenu;\nvar _c;\n$RefreshReg$(_c, \"GetQuizMenu\");","map":{"version":3,"names":["React","nanoid","Button","GetQuizMenu","idButton","setIdButton","useState","idLoop","getIdisHold","id","isHeld","idArrayButton","i","push","element","map","prev","ChangeColor"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid} from 'nanoid'\r\nimport Button from './button'\r\n\r\nexport default function GetQuizMenu(){\r\n   const [idButton , setIdButton] = React.useState(idLoop)\r\n\r\n   function getIdisHold(){\r\n    return {id:nanoid() , isHeld:false}\r\n   }\r\n\r\n   function idLoop(){\r\n    const idArrayButton = []\r\n    for(let i = 0 ; i< 4 ; i++){\r\n        idArrayButton.push(getIdisHold)\r\n    }\r\n    return idArrayButton\r\n   }\r\n    \r\n    const element = idButton.map( prev =>{        \r\n        return( <Button id={prev.id} key={prev.id} isHeld={prev.isHeld} toggle={()=>ChangeColor(prev.id)} />)\r\n    } \r\n    )\r\n    return (\r\n       <div>\r\n           {element}\r\n       </div>\r\n    )\r\n   \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAO,QAAQ;AAC9B,OAAOC,MAAM,MAAM,UAAU;AAAA;AAE7B,eAAe,SAASC,WAAW,GAAE;EAAA;EAClC,MAAM,CAACC,QAAQ,EAAGC,WAAW,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAACC,MAAM,CAAC;EAEvD,SAASC,WAAW,GAAE;IACrB,OAAO;MAACC,EAAE,EAACR,MAAM,EAAE;MAAGS,MAAM,EAAC;IAAK,CAAC;EACpC;EAEA,SAASH,MAAM,GAAE;IAChB,MAAMI,aAAa,GAAG,EAAE;IACxB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAE,CAAC,EAAGA,CAAC,EAAE,EAAC;MACvBD,aAAa,CAACE,IAAI,CAACL,WAAW,CAAC;IACnC;IACA,OAAOG,aAAa;EACrB;EAEC,MAAMG,OAAO,GAAGV,QAAQ,CAACW,GAAG,CAAEC,IAAI,IAAG;IACjC,oBAAQ,QAAC,MAAM;MAAC,EAAE,EAAEA,IAAI,CAACP,EAAG;MAAe,MAAM,EAAEO,IAAI,CAACN,MAAO;MAAC,MAAM,EAAE,MAAIO,WAAW,CAACD,IAAI,CAACP,EAAE;IAAE,GAA/DO,IAAI,CAACP,EAAE;MAAA;MAAA;MAAA;IAAA,QAA2D;EACxG,CAAC,CACA;EACD,oBACG;IAAA,UACKK;EAAO;IAAA;IAAA;IAAA;EAAA,QACN;AAGb;AAAC,GAzBuBX,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}