{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst AnswerHtml = props => {\n  _s();\n  const [stile, setStile] = React.useState(false);\n  function ChangeColor() {\n    setStile(!stile);\n  }\n  const styles = {\n    backgroundColor: stile ? 'green' : 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"main-title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: ChangeColor,\n        className: \"main-btn\",\n        children: props.correct.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: ChangeColor,\n        className: \"main-btn\",\n        children: props.answers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: ChangeColor,\n        className: \"main-btn\",\n        children: props.answers[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: ChangeColor,\n        className: \"main-btn\",\n        children: props.answers[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_s(AnswerHtml, \"6VeO3lUilwD5V5IYMPY9rIwnJxI=\");\n_c = AnswerHtml;\nexport default function GetDataHtml() {\n  _s2();\n  const [answer, setAnswer] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://opentdb.com/api.php?amount=5').then(response => response.json()).then(data => {\n      const correctAnswer = data.results.map(pio => pio.correct_answer);\n      const IncorrectArrey = data.results.map(pio => pio.incorrect_answers);\n      const newId = nanoid();\n      const gyui = IncorrectArrey.map(pio => {\n        for (let i = 0; i < pio.length; i++) {\n          return {\n            id: newId && pio[i]\n          };\n        }\n      });\n      console.log(gyui);\n      const typeArray = data.results.map(pio => pio.type);\n      const question = data.results.map(pio => pio.question);\n      const allAnswer = correctAnswer.map((get, index) => ({\n        title: question[index],\n        correct: {\n          value: get,\n          id: newId\n        },\n        Incorrec: [IncorrectArrey[index].map(pio => ({\n          id: newId,\n          value: pio\n        }))],\n        isHHeld: false,\n        type: typeArray[index],\n        id: newId,\n        answers: [...IncorrectArrey[index], correctAnswer[index]]\n      }));\n      setAnswer(allAnswer);\n    });\n  }, []);\n  console.log(answer);\n  const finalAnswer = answer.map(x => {\n    return /*#__PURE__*/_createElement(AnswerHtml, {\n      ...x,\n      key: x.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: finalAnswer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s2(GetDataHtml, \"Y2SfHEM8URI8tNHEfF5r19ufvoY=\");\n_c2 = GetDataHtml;\nvar _c, _c2;\n$RefreshReg$(_c, \"AnswerHtml\");\n$RefreshReg$(_c2, \"GetDataHtml\");","map":{"version":3,"names":["React","nanoid","AnswerHtml","props","stile","setStile","useState","ChangeColor","styles","backgroundColor","title","correct","value","answers","GetDataHtml","answer","setAnswer","useEffect","fetch","then","response","json","data","correctAnswer","results","map","pio","correct_answer","IncorrectArrey","incorrect_answers","newId","gyui","i","length","id","console","log","typeArray","type","question","allAnswer","get","index","Incorrec","isHHeld","finalAnswer","x"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\n\r\nconst AnswerHtml = (props) =>{\r\n    const [stile , setStile] = React.useState(false)\r\n    function ChangeColor(){\r\n       setStile(!stile)\r\n    }\r\n    const styles = {backgroundColor : stile ? 'green' :'white'}\r\n    return (\r\n        <div>\r\n            <h3 className='main-title'>{props.title}</h3>\r\n            <div className='main-flex'>\r\n                <button style={styles} onClick={ChangeColor} className='main-btn'>{props.correct.value}</button>\r\n                <button style={styles} onClick={ChangeColor} className='main-btn'>{props.answers[1]}</button>\r\n                <button style={styles} onClick={ChangeColor} className='main-btn'>{props.answers[2]}</button>\r\n                <button style={styles} onClick={ChangeColor} className='main-btn'>{props.answers[3]}</button>\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function GetDataHtml(){\r\n\r\n    const [answer , setAnswer] = React.useState([])\r\n    React.useEffect(()=>{\r\n        fetch('https://opentdb.com/api.php?amount=5')\r\n        .then(response => response.json())\r\n        .then(data => {        \r\n            const correctAnswer = data.results.map(pio => pio.correct_answer)\r\n            const IncorrectArrey = data.results.map(pio => pio.incorrect_answers )\r\n            const newId = nanoid()\r\n            const gyui = IncorrectArrey.map(pio=> {for(let i = 0 ; i < pio.length; i++){return {id:newId && pio[i]}}\r\n            })\r\n            console.log(gyui)\r\n            const typeArray = data.results.map(pio => pio.type)\r\n            const question = data.results.map(pio => pio.question)          \r\n            const allAnswer = correctAnswer.map((get , index) => ({\r\n              title:question[index] , correct:{value:get , id:newId}, Incorrec:[IncorrectArrey[index].map((pio) => ({id:newId , value:pio}))] ,isHHeld : false , type:typeArray[index] , id:newId, answers : [...IncorrectArrey[index] , correctAnswer[index]]\r\n            }))\r\n         setAnswer(allAnswer)\r\n      })\r\n    },[])\r\n    console.log(answer)\r\n   \r\n   \r\n    \r\n    \r\n    \r\n    const finalAnswer = answer.map(x=>{\r\n        return <AnswerHtml {...x} key={x.id}\r\n         />\r\n        })\r\n    return(\r\n        <main>{finalAnswer}</main>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}