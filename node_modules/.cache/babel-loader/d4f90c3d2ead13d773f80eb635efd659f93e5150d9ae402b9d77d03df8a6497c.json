{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport Button from './button';\nimport Domanda from './domanda';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetQuizMenu() {\n  _s();\n  const [quizdata, setData] = React.useState([]);\n  React.useEffect(() => {\n    async function getDataValue() {\n      const response = await fetch('https://opentdb.com/api.php?amount=5');\n      const data = await response.json();\n      setData(data.results);\n    }\n    getDataValue();\n  }, []);\n  const provetta = quizdata.map(_ref => {\n    let {\n      correct_answer,\n      incorrect_answers\n    } = _ref;\n    const proviamo = [correct_answer, ...incorrect_answers];\n    return shuffleArray(proviamo);\n  });\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n  const questionHtml = quizdata.map(poi => poi.question);\n  const finale = provetta.map(poi => {\n    return {\n      questionHtml,\n      poi\n    };\n  });\n  console.log(finale);\n  const [dice, setDice] = React.useState(getLoopArray());\n  function getArrayStyle() {\n    return {\n      answer: nanoid(),\n      question: ''\n    };\n  }\n  function getLoopArray() {\n    const dice = [];\n    for (let i = 0; i < finale.length; i++) {\n      dice.push(getArrayStyle());\n    }\n  }\n  console.log(dice);\n  const finaleHtml = finale.map(poi => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        value: poi.questionHtml[0],\n        answer: poi.poi[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this);\n  });\n  // console.log(provetta)\n  // const voi = questionHtml.map(poi =>{\n  //   return <Domanda value={poi} />\n  // })\n  //  const froi = provetta.map(poi => {\n  //   return (\n  //   <>\n\n  //   <Button \n  //    answer1={poi[0]} answer2={poi[1]} answer3={poi[2]} answer4={poi[3]} />\n  //   </>\n  //   )\n  //  })\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: finaleHtml\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n\n  // return (\n  // <div>\n  //     <Domanda\n  //      isHeld={quizdata.isHeld}       \n  //       answer={provetta[0]}\n  //        value={questionHtml[0]} />\n  //     <Domanda\n  //      isHeld={quizdata.isHeld}      \n  //       answer={provetta[1]}\n  //        value={questionHtml[1]} />\n  //     <Domanda\n  //      isHeld={quizdata.isHeld}      \n  //       answer={provetta[2]}\n  //        value={questionHtml[2]} />\n  //     <Domanda\n  //      isHeld={quizdata.isHeld}     \n  //       answer={provetta[3]}\n  //        value={questionHtml[3]} />\n  //     <Domanda\n  //      isHeld={quizdata.isHeld}        \n  //       answer={provetta[4]}\n  //        value={questionHtml[4]} />\n\n  // </div>    \n  // ) \n}\n_s(GetQuizMenu, \"B+JQgFmhLZfRwcYabu1BY0H/Ttw=\");\n_c = GetQuizMenu;\nvar _c;\n$RefreshReg$(_c, \"GetQuizMenu\");","map":{"version":3,"names":["React","nanoid","Button","Domanda","GetQuizMenu","quizdata","setData","useState","useEffect","getDataValue","response","fetch","data","json","results","provetta","map","correct_answer","incorrect_answers","proviamo","shuffleArray","array","i","length","j","Math","floor","random","questionHtml","poi","question","finale","console","log","dice","setDice","getLoopArray","getArrayStyle","answer","push","finaleHtml"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid} from 'nanoid'\r\nimport Button from './button'\r\nimport Domanda from './domanda'\r\n\r\nexport default function GetQuizMenu(){\r\n     \r\n    const [quizdata , setData] = React.useState([])\r\n      React.useEffect( () =>{\r\n        async function getDataValue(){\r\n          const response = await  fetch('https://opentdb.com/api.php?amount=5')\r\n          const data = await response.json()\r\n          setData(data.results)\r\n        }\r\n        getDataValue()\r\n      },[]) \r\n        \r\n      const provetta =  quizdata.map(({correct_answer,incorrect_answers})=>{\r\n        const proviamo = [correct_answer,...incorrect_answers]\r\n        return shuffleArray(proviamo)\r\n      })      \r\n      function shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n      }  \r\n      const questionHtml = quizdata.map(poi=> poi.question)\r\n      const finale = provetta.map((poi)=>{\r\n\r\n        return  {questionHtml , poi}\r\n      }\r\n      )\r\n      console.log(finale)\r\n      const [dice ,setDice] = React.useState(getLoopArray())\r\n      function getArrayStyle(){\r\n        return {answer:nanoid() , question:'' }\r\n      }\r\n      function getLoopArray(){\r\n        const dice=[]\r\n        for(let i = 0 ; i< finale.length ; i++){\r\n           dice.push(getArrayStyle())\r\n        }  \r\n      }\r\n      console.log(dice)\r\n      const finaleHtml = finale.map(poi=>{\r\n        return(\r\n          <div>\r\n            {/* <Domanda value={poi.questionHtml[0]} /> */}\r\n            <Button  value={poi.questionHtml[0]} answer={poi.poi[0]} />\r\n\r\n          </div>\r\n        )\r\n      })\r\n    // console.log(provetta)\r\n    // const voi = questionHtml.map(poi =>{\r\n    //   return <Domanda value={poi} />\r\n    // })\r\n    //  const froi = provetta.map(poi => {\r\n    //   return (\r\n    //   <>\r\n     \r\n    //   <Button \r\n    //    answer1={poi[0]} answer2={poi[1]} answer3={poi[2]} answer4={poi[3]} />\r\n    //   </>\r\n    //   )\r\n    //  })\r\n    \r\n      return(\r\n        <main>\r\n          {finaleHtml}\r\n        </main>\r\n      )\r\n\r\n    // return (\r\n    // <div>\r\n    //     <Domanda\r\n    //      isHeld={quizdata.isHeld}       \r\n    //       answer={provetta[0]}\r\n    //        value={questionHtml[0]} />\r\n    //     <Domanda\r\n    //      isHeld={quizdata.isHeld}      \r\n    //       answer={provetta[1]}\r\n    //        value={questionHtml[1]} />\r\n    //     <Domanda\r\n    //      isHeld={quizdata.isHeld}      \r\n    //       answer={provetta[2]}\r\n    //        value={questionHtml[2]} />\r\n    //     <Domanda\r\n    //      isHeld={quizdata.isHeld}     \r\n    //       answer={provetta[3]}\r\n    //        value={questionHtml[3]} />\r\n    //     <Domanda\r\n    //      isHeld={quizdata.isHeld}        \r\n    //       answer={provetta[4]}\r\n    //        value={questionHtml[4]} />\r\n    \r\n    // </div>    \r\n    // ) \r\n}\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}