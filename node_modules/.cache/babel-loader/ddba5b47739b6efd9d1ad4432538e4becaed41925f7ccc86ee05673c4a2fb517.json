{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst AnswerHtml = props => {\n  console.log(props);\n  const buttons = [];\n  function GetButtons() {\n    for (let i = 0; i < props.answers.length; i++) {\n      const styles = {\n        backgroundColor: props.isHeld ? 'green' : 'white'\n      };\n      const button = /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: props.toggle,\n        value: props.isHeld,\n        id: props.answers[i],\n        className: \"main-btn\",\n        children: props.answers.value[i].value\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 30\n      }, this);\n      buttons.push(button);\n    }\n    return buttons;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"main-title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-flex\",\n      children: GetButtons()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = AnswerHtml;\nexport default function GetDataHtml() {\n  _s();\n  const [answer, setAnswer] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://opentdb.com/api.php?amount=5').then(response => response.json()).then(data => {\n      const newId = nanoid();\n      const correctAnswer = data.results.map(pio => pio.correct_answer);\n      const incorrectArrey = data.results.map(pio => pio.incorrect_answers.map(get => {\n        return {\n          id: newId,\n          value: get\n        };\n      }));\n      const typeArray = data.results.map(pio => pio.type);\n      const question = data.results.map(pio => pio.question);\n      const allAnswer = correctAnswer.map((get, index) => ({\n        title: question[index],\n        correct: {\n          value: get,\n          id: newId\n        },\n        incorrec: [incorrectArrey[index].map(pio => ({\n          id: newId,\n          value: pio\n        }))],\n        isHeld: false,\n        type: typeArray[index],\n        id: newId,\n        answers: {\n          value: incorrectArrey[index],\n          id: newId\n        }\n      }));\n      const giyl = allAnswer.map(get => get.incorrec);\n      console.log(giyl);\n      setAnswer(allAnswer);\n    });\n  }, []);\n  console.log(answer);\n  const finalAnswer = answer.map(x => {\n    return /*#__PURE__*/_createElement(AnswerHtml, {\n      ...x,\n      key: nanoid(),\n      toggle: () => ChangeColor(x.answers),\n      id: x.answers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    });\n  });\n  function ChangeColor(id) {\n    setAnswer(prev => prev.map(newPrev => {\n      for (let i = 0; i < newPrev.length; i++) {}\n      return newPrev.answers === id ? {\n        ...newPrev,\n        isHeld: !newPrev.isHeld\n      } : newPrev;\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: finalAnswer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(GetDataHtml, \"Y2SfHEM8URI8tNHEfF5r19ufvoY=\");\n_c2 = GetDataHtml;\nvar _c, _c2;\n$RefreshReg$(_c, \"AnswerHtml\");\n$RefreshReg$(_c2, \"GetDataHtml\");","map":{"version":3,"names":["React","nanoid","AnswerHtml","props","console","log","buttons","GetButtons","i","answers","length","styles","backgroundColor","isHeld","button","toggle","value","push","title","GetDataHtml","answer","setAnswer","useState","useEffect","fetch","then","response","json","data","newId","correctAnswer","results","map","pio","correct_answer","incorrectArrey","incorrect_answers","get","id","typeArray","type","question","allAnswer","index","correct","incorrec","giyl","finalAnswer","x","ChangeColor","prev","newPrev"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\n\r\nconst AnswerHtml = (props) =>{\r\n    console.log(props)\r\n    const buttons = []\r\n    function GetButtons(){\r\n        for (let i = 0 ; i < props.answers.length ; i++){\r\n            const styles = {backgroundColor : props.isHeld ? 'green' :'white'}\r\n            const button = ( <button style={styles} onClick={props.toggle} key={nanoid()} value={props.isHeld} id={props.answers[i]} className='main-btn'>{props.answers.value[i].value}</button>)\r\n            buttons.push(button)\r\n        }\r\n        return buttons\r\n    }\r\n    return (\r\n        <div>\r\n            <h3 className='main-title'>{props.title}</h3>\r\n            <div className='main-flex'>\r\n                {GetButtons()}\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function GetDataHtml(){\r\n\r\n    const [answer , setAnswer] = React.useState([])\r\n    React.useEffect(()=>{\r\n        fetch('https://opentdb.com/api.php?amount=5')\r\n        .then(response => response.json())\r\n        .then(data => {        \r\n            const newId = nanoid()\r\n            const correctAnswer = data.results.map(pio => pio.correct_answer)\r\n            const incorrectArrey = data.results.map(pio => pio.incorrect_answers.map(get =>{return {id:newId , value:get}}) )\r\n            const typeArray = data.results.map(pio => pio.type)\r\n            const question = data.results.map(pio => pio.question)          \r\n            const allAnswer = correctAnswer.map((get , index) => ({\r\n              title:question[index] , correct:{value:get , id:newId}, incorrec:[incorrectArrey[index].map((pio) => ({id:newId , value:pio}))] ,isHeld : false , type:typeArray[index] , id:newId, answers : {value :incorrectArrey[index],id:newId }\r\n            }))\r\n            const giyl = allAnswer.map(get=> get.incorrec)\r\n            console.log(giyl)\r\n         setAnswer(allAnswer)\r\n      })\r\n    },[])\r\n    console.log(answer) \r\n    \r\n    const finalAnswer = answer.map(x=>{\r\n        return <AnswerHtml {...x} key={nanoid()} toggle={()=>ChangeColor(x.answers)} id={x.answers}\r\n         />\r\n        })\r\n        function ChangeColor(id) {\r\n           setAnswer(prev => prev.map(newPrev => {\r\n            for(let i =0 ; i < newPrev.length;i++){}\r\n            return newPrev.answers === id ? {...newPrev , isHeld:!newPrev.isHeld} : newPrev \r\n           }))\r\n        }\r\n    return(\r\n        <main>{finalAnswer}</main>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}