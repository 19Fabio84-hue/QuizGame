{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '../button/setButtons';\nimport Domanda from './domanda';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GetQuizMenu(props) {\n  _s();\n  const [correctAnswer, setCorrectAnswer] = useState(false);\n\n  // Presa dati dall' API   \n  const [quizdata, setData] = useState([]);\n  React.useEffect(() => {\n    fetch('https://opentdb.com/api.php?amount=5').then(response => response.json()).then(data => setData(data.results.map(quiz => {\n      const {\n        question,\n        correct_answer,\n        incorrect_answers\n      } = quiz;\n      const answers = shuffleArray([{\n        answer: correct_answer,\n        isCorrect: true\n      }, ...incorrect_answers.map(answer => ({\n        answer,\n        isCorrect: false\n      }))]);\n      return {\n        question,\n        answers\n      };\n    })));\n  }, []);\n  console.log(quizdata);\n  // Presa Array di Domande e Risposte\n  // const questionHtml = quizdata.map(quiz=> quiz.question)\n\n  // const correctArray = quizdata.map(quiz => ({answer : quiz.correct_answer , isCorrect : true}))     \n  // const incorrectArray = quizdata.map(quiz=> quiz.incorrect_answers.map(incorrect => ({answer : incorrect , isCorrect :false}) ))\n  // const newArrayAnswer = correctArray.map((quiz,index) =>{\n  //   const incorrect = incorrectArray[index]\n  //  QUI MESCOLO L'ARRAY DELLE DOMANDE\n  //     return shuffleArray([quiz , ...incorrect])       \n  // })      \n  // const provetta = newArrayAnswer \n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n  // const arrayFinale = provetta.map((get,index)=> {\n  //   return {question:questionHtml[index] , answer:get}\n  // })\n\n  const getAnswers = quizdata.map(prev => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-ctn\",\n      children: [/*#__PURE__*/_jsxDEV(Domanda, {\n        value: prev.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-ctn\",\n        children: correctAnswer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: prev.answers.length === 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              check: correctAnswer,\n              correct: prev.answers[0].isCorrect,\n              value: prev.answers[0].answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              check: correctAnswer,\n              correct: prev.answers[1].isCorrect,\n              value: prev.answers[1].answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              check: correctAnswer,\n              correct: prev.answers[0].isCorrect,\n              value: prev.answers[0].answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              check: correctAnswer,\n              correct: prev.answers[1].isCorrect,\n              value: prev.answers[1].answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              check: correctAnswer,\n              correct: prev.answers[2].isCorrect,\n              value: prev.answers[2].answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              check: correctAnswer,\n              correct: prev.answers[3].isCorrect,\n              value: prev.answers[3].answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: prev.answers.length === 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              value: prev.answers[0].answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              value: prev.answers[1].answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n              value: prev.answers[0].answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              value: prev.answers[1].answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              value: prev.answers[2].answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              value: prev.answers[3].answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  });\n  //  function checkAnsewer(){\n  //      setCorrectAnswer(true)   \n  //  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [getAnswers, props.correct ? /*#__PURE__*/_jsxDEV(\"p\", {\n      type: \"submit\",\n      className: \"main-btn\",\n      onClick: props.begin,\n      children: \"Restart Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      type: \"submit\",\n      className: \"main-btn\",\n      onClick: () => setCorrectAnswer(!correctAnswer),\n      children: \"Check Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(GetQuizMenu, \"ngm2+YLnvLWUkIgwksvSoqceoyA=\");\n_c = GetQuizMenu;\nvar _c;\n$RefreshReg$(_c, \"GetQuizMenu\");","map":{"version":3,"names":["React","useState","Button","Domanda","GetQuizMenu","props","correctAnswer","setCorrectAnswer","quizdata","setData","useEffect","fetch","then","response","json","data","results","map","quiz","question","correct_answer","incorrect_answers","answers","shuffleArray","answer","isCorrect","console","log","array","i","length","j","Math","floor","random","getAnswers","prev","correct","begin"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React , { useState } from 'react'\r\nimport Button from '../button/setButtons'\r\nimport Domanda from './domanda'\r\n\r\n\r\nexport default function GetQuizMenu(props){  \r\n       \r\n      \r\n  const [correctAnswer , setCorrectAnswer] = useState(false)\r\n\r\n      // Presa dati dall' API   \r\n    const [quizdata , setData] = useState([])\r\n      React.useEffect( () =>{\r\n         fetch('https://opentdb.com/api.php?amount=5')\r\n          .then(response => response.json())\r\n          .then(data=> setData(data.results.map(quiz=>{\r\n            const {question , correct_answer , incorrect_answers } = quiz\r\n            const answers = shuffleArray([\r\n              { answer: correct_answer, isCorrect: true },\r\n              ...incorrect_answers.map((answer) => ({ answer, isCorrect: false })),\r\n            ]);\r\n            return  {question , answers}\r\n          })) )        \r\n      },[]) \r\n      console.log(quizdata)\r\n      // Presa Array di Domande e Risposte\r\n      // const questionHtml = quizdata.map(quiz=> quiz.question)\r\n\r\n      // const correctArray = quizdata.map(quiz => ({answer : quiz.correct_answer , isCorrect : true}))     \r\n      // const incorrectArray = quizdata.map(quiz=> quiz.incorrect_answers.map(incorrect => ({answer : incorrect , isCorrect :false}) ))\r\n      // const newArrayAnswer = correctArray.map((quiz,index) =>{\r\n      //   const incorrect = incorrectArray[index]\r\n        //  QUI MESCOLO L'ARRAY DELLE DOMANDE\r\n      //     return shuffleArray([quiz , ...incorrect])       \r\n      // })      \r\n      // const provetta = newArrayAnswer \r\n      function shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n      } \r\n      // const arrayFinale = provetta.map((get,index)=> {\r\n      //   return {question:questionHtml[index] , answer:get}\r\n      // })\r\n     \r\n      const getAnswers = quizdata.map(prev=>{\r\n        return <div className='main-ctn'>\r\n        <Domanda  value={prev.question}/>\r\n        <div className='btn-ctn'>\r\n            {correctAnswer ?\r\n          <>\r\n           {prev.answers.length === 2 ?\r\n           <>\r\n            <Button check={correctAnswer} correct={prev.answers[0].isCorrect} value={prev.answers[0].answer}/> \r\n           <Button check={correctAnswer} correct={prev.answers[1].isCorrect} value={prev.answers[1].answer}/> \r\n           </>\r\n          : <>\r\n            <Button check={correctAnswer}  correct={prev.answers[0].isCorrect} value={prev.answers[0].answer}/> \r\n           <Button check={correctAnswer} correct={prev.answers[1].isCorrect} value={prev.answers[1].answer}/> \r\n           <Button check={correctAnswer} correct={prev.answers[2].isCorrect} value={prev.answers[2].answer}/> \r\n           <Button check={correctAnswer} correct={prev.answers[3].isCorrect} value={prev.answers[3].answer}/>\r\n           </>}\r\n          </>\r\n        : <>\r\n           {prev.answers.length === 2 ? <>\r\n                   <Button  value={prev.answers[0].answer}/> \r\n                   <Button  value={prev.answers[1].answer}/> \r\n           </>\r\n           :\r\n          <> <Button  value={prev.answers[0].answer}/> \r\n           <Button  value={prev.answers[1].answer}/> \r\n           <Button  value={prev.answers[2].answer}/> \r\n           <Button  value={prev.answers[3].answer}/>\r\n          </>}\r\n         </>\r\n        }\r\n\r\n        </div>\r\n        \r\n           <hr></hr>\r\n\r\n</div>\r\n      })\r\n  //  function checkAnsewer(){\r\n  //      setCorrectAnswer(true)   \r\n  //  }\r\n      return (\r\n        <main>\r\n           {getAnswers}     \r\n           {props.correct ?<p type='submit' className='main-btn'  onClick={props.begin}>Restart Quiz</p>\r\n           : <p type='submit' className='main-btn'   onClick={()=>setCorrectAnswer(!correctAnswer)}>Check Answer</p>}\r\n        </main>\r\n      )\r\n}\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}