{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\button\\\\setButtons.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport Button from './button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetButtons(props) {\n  _s();\n  console.log(props);\n  const [buttonArray, setButtonArray] = React.useState(pushArray());\n  function getArray() {\n    return {\n      id: nanoid(),\n      isheld: false\n    };\n  }\n  function pushArray() {\n    const dice = [];\n    for (let i = 0; i < 4; i++) {\n      dice.push(getArray());\n    }\n    return dice;\n  }\n  const buttonFinal = buttonArray.map(get => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        toggle: () => ChangeColor(get.id),\n        id: get.id,\n        isheld: get.isheld,\n        value: props.value\n      }, get.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 22\n      }, this)\n    }, void 0, false);\n  });\n  function ChangeColor(id) {\n    setButtonArray(prev => prev.map(get => {\n      return get.id === id ? {\n        ...get,\n        isheld: !get.isheld\n      } : get;\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: buttonFinal\n  }, void 0, false);\n}\n_s(SetButtons, \"FUbxn7PFsf7bnBxNIgZvQYZ0zBM=\");\n_c = SetButtons;\nvar _c;\n$RefreshReg$(_c, \"SetButtons\");","map":{"version":3,"names":["React","nanoid","Button","SetButtons","props","console","log","buttonArray","setButtonArray","useState","pushArray","getArray","id","isheld","dice","i","push","buttonFinal","map","get","ChangeColor","value","prev"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/button/setButtons.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\nimport Button from './button'\r\n\r\nexport default function SetButtons(props){\r\n    console.log(props)\r\n    const [buttonArray , setButtonArray ] =React.useState(pushArray())\r\n\r\n    function getArray(){\r\n        return ( {id:nanoid() , isheld:false})\r\n    }\r\n    function pushArray(){\r\n        const dice=[]\r\n        for ( let i=0 ; i< 4; i++){\r\n            dice.push(getArray())\r\n        }\r\n        return dice\r\n    }\r\n    const buttonFinal = buttonArray.map(get=>{\r\n          return    <>\r\n                     <Button toggle={()=>ChangeColor(get.id)} id={get.id} isheld={get.isheld} key={get.id} value={props.value}/>          \r\n          </>\r\n        })\r\n    function ChangeColor(id){\r\n        setButtonArray(prev=> prev.map(get=>{\r\n            return get.id === id ? {...get , isheld:!get.isheld} : get\r\n        })\r\n        )\r\n    }\r\n    return (\r\n    <>\r\n    {buttonFinal}\r\n    </>)\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAAA;AAAA;AAE7B,eAAe,SAASC,UAAU,CAACC,KAAK,EAAC;EAAA;EACrCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAM,CAACG,WAAW,EAAGC,cAAc,CAAE,GAAER,KAAK,CAACS,QAAQ,CAACC,SAAS,EAAE,CAAC;EAElE,SAASC,QAAQ,GAAE;IACf,OAAS;MAACC,EAAE,EAACX,MAAM,EAAE;MAAGY,MAAM,EAAC;IAAK,CAAC;EACzC;EACA,SAASH,SAAS,GAAE;IAChB,MAAMI,IAAI,GAAC,EAAE;IACb,KAAM,IAAIC,CAAC,GAAC,CAAC,EAAGA,CAAC,GAAE,CAAC,EAAEA,CAAC,EAAE,EAAC;MACtBD,IAAI,CAACE,IAAI,CAACL,QAAQ,EAAE,CAAC;IACzB;IACA,OAAOG,IAAI;EACf;EACA,MAAMG,WAAW,GAAGV,WAAW,CAACW,GAAG,CAACC,GAAG,IAAE;IACnC,oBAAU;MAAA,uBACC,QAAC,MAAM;QAAC,MAAM,EAAE,MAAIC,WAAW,CAACD,GAAG,CAACP,EAAE,CAAE;QAAC,EAAE,EAAEO,GAAG,CAACP,EAAG;QAAC,MAAM,EAAEO,GAAG,CAACN,MAAO;QAAc,KAAK,EAAET,KAAK,CAACiB;MAAM,GAA3BF,GAAG,CAACP,EAAE;QAAA;QAAA;QAAA;MAAA;IAAuB,iBACnH;EACL,CAAC,CAAC;EACN,SAASQ,WAAW,CAACR,EAAE,EAAC;IACpBJ,cAAc,CAACc,IAAI,IAAGA,IAAI,CAACJ,GAAG,CAACC,GAAG,IAAE;MAChC,OAAOA,GAAG,CAACP,EAAE,KAAKA,EAAE,GAAG;QAAC,GAAGO,GAAG;QAAGN,MAAM,EAAC,CAACM,GAAG,CAACN;MAAM,CAAC,GAAGM,GAAG;IAC9D,CAAC,CAAC,CACD;EACL;EACA,oBACA;IAAA,UACCF;EAAW,iBACT;AACP;AAAC,GA7BuBd,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}