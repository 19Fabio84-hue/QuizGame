{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n// import { nanoid} from 'nanoid'\n// import Button from './button'\nimport Domanda from './domanda';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetQuizMenu() {\n  _s();\n  const [quizdata, setData] = React.useState([]);\n  React.useEffect(() => {\n    async function getDataValue() {\n      const response = await fetch('https://opentdb.com/api.php?amount=5');\n      const data = await response.json();\n      setData(data.results);\n    }\n    getDataValue();\n  }, []);\n  const provetta = quizdata.map(_ref => {\n    let {\n      correct_answer,\n      incorrect_answers\n    } = _ref;\n    const proviamo = [correct_answer, ...incorrect_answers];\n    return shuffleArray(proviamo);\n  });\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n  const questionHtml = quizdata.map(poi => poi.question);\n  console.log(provetta);\n  console.log(loopanswer);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Domanda, {\n      isHeld: quizdata.isHeld,\n      answer: provetta[0],\n      value: questionHtml[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Domanda, {\n      isHeld: quizdata.isHeld,\n      answer: provetta[1],\n      value: questionHtml[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Domanda, {\n      isHeld: quizdata.isHeld,\n      answer: provetta[2],\n      value: questionHtml[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Domanda, {\n      isHeld: quizdata.isHeld,\n      answer: provetta[3],\n      value: questionHtml[3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Domanda, {\n      isHeld: quizdata.isHeld,\n      answer: provetta[4],\n      value: questionHtml[4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(GetQuizMenu, \"n+R8LNVtQz5PYSNXcEUuXWXycQo=\");\n_c = GetQuizMenu;\nvar _c;\n$RefreshReg$(_c, \"GetQuizMenu\");","map":{"version":3,"names":["React","Domanda","GetQuizMenu","quizdata","setData","useState","useEffect","getDataValue","response","fetch","data","json","results","provetta","map","correct_answer","incorrect_answers","proviamo","shuffleArray","array","i","length","j","Math","floor","random","questionHtml","poi","question","console","log","loopanswer","isHeld"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\n// import { nanoid} from 'nanoid'\r\n// import Button from './button'\r\nimport Domanda from './domanda'\r\n\r\nexport default function GetQuizMenu(){\r\n     \r\n    const [quizdata , setData] = React.useState([])\r\n      React.useEffect( () =>{\r\n        async function getDataValue(){\r\n          const response = await  fetch('https://opentdb.com/api.php?amount=5')\r\n          const data = await response.json()\r\n          setData(data.results)\r\n        }\r\n        getDataValue()\r\n      },[])\r\n   \r\n        \r\n      const provetta =  quizdata.map(({correct_answer,incorrect_answers})=>{\r\n        const proviamo = [correct_answer,...incorrect_answers]\r\n        return shuffleArray(proviamo)\r\n      })      \r\n      function shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n      }  \r\n      const questionHtml = quizdata.map(poi=> poi.question)\r\n   \r\n    console.log(provetta)\r\n\r\n        console.log(loopanswer)\r\n\r\n    return (\r\n    <div>\r\n        <Domanda\r\n         isHeld={quizdata.isHeld}       \r\n          answer={provetta[0]}\r\n           value={questionHtml[0]} />\r\n        <Domanda\r\n         isHeld={quizdata.isHeld}      \r\n          answer={provetta[1]}\r\n           value={questionHtml[1]} />\r\n        <Domanda\r\n         isHeld={quizdata.isHeld}      \r\n          answer={provetta[2]}\r\n           value={questionHtml[2]} />\r\n        <Domanda\r\n         isHeld={quizdata.isHeld}     \r\n          answer={provetta[3]}\r\n           value={questionHtml[3]} />\r\n        <Domanda\r\n         isHeld={quizdata.isHeld}        \r\n          answer={provetta[4]}\r\n           value={questionHtml[4]} />\r\n    \r\n    </div>\r\n    \r\n    ) \r\n}\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA,OAAOC,OAAO,MAAM,WAAW;AAAA;AAE/B,eAAe,SAASC,WAAW,GAAE;EAAA;EAEjC,MAAM,CAACC,QAAQ,EAAGC,OAAO,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC,EAAE,CAAC;EAC7CL,KAAK,CAACM,SAAS,CAAE,MAAK;IACpB,eAAeC,YAAY,GAAE;MAC3B,MAAMC,QAAQ,GAAG,MAAOC,KAAK,CAAC,sCAAsC,CAAC;MACrE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCP,OAAO,CAACM,IAAI,CAACE,OAAO,CAAC;IACvB;IACAL,YAAY,EAAE;EAChB,CAAC,EAAC,EAAE,CAAC;EAGL,MAAMM,QAAQ,GAAIV,QAAQ,CAACW,GAAG,CAAC,QAAsC;IAAA,IAArC;MAACC,cAAc;MAACC;IAAiB,CAAC;IAChE,MAAMC,QAAQ,GAAG,CAACF,cAAc,EAAC,GAAGC,iBAAiB,CAAC;IACtD,OAAOE,YAAY,CAACD,QAAQ,CAAC;EAC/B,CAAC,CAAC;EACF,SAASC,YAAY,CAACC,KAAK,EAAE;IAC3B,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACzC,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,KAAK,CAACG,CAAC,CAAC,EAAEH,KAAK,CAACC,CAAC,CAAC,CAAC;IAC7C;IACA,OAAOD,KAAK;EACd;EACA,MAAMO,YAAY,GAAGvB,QAAQ,CAACW,GAAG,CAACa,GAAG,IAAGA,GAAG,CAACC,QAAQ,CAAC;EAEvDC,OAAO,CAACC,GAAG,CAACjB,QAAQ,CAAC;EAEjBgB,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;EAE3B,oBACA;IAAA,wBACI,QAAC,OAAO;MACP,MAAM,EAAE5B,QAAQ,CAAC6B,MAAO;MACvB,MAAM,EAAEnB,QAAQ,CAAC,CAAC,CAAE;MACnB,KAAK,EAAEa,YAAY,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7B,QAAC,OAAO;MACP,MAAM,EAAEvB,QAAQ,CAAC6B,MAAO;MACvB,MAAM,EAAEnB,QAAQ,CAAC,CAAC,CAAE;MACnB,KAAK,EAAEa,YAAY,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7B,QAAC,OAAO;MACP,MAAM,EAAEvB,QAAQ,CAAC6B,MAAO;MACvB,MAAM,EAAEnB,QAAQ,CAAC,CAAC,CAAE;MACnB,KAAK,EAAEa,YAAY,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7B,QAAC,OAAO;MACP,MAAM,EAAEvB,QAAQ,CAAC6B,MAAO;MACvB,MAAM,EAAEnB,QAAQ,CAAC,CAAC,CAAE;MACnB,KAAK,EAAEa,YAAY,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7B,QAAC,OAAO;MACP,MAAM,EAAEvB,QAAQ,CAAC6B,MAAO;MACvB,MAAM,EAAEnB,QAAQ,CAAC,CAAC,CAAE;MACnB,KAAK,EAAEa,YAAY,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAE3B;AAGV;AAAC,GAxDuBxB,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}