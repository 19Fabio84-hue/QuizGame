{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\button.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Button(props) {\n  _s();\n  console.log(props);\n  const styles = {\n    backgroundColor: props.isHeld ? ' green' : '#FFF'\n  };\n  const [idButton, setIdButton] = React.useState(idLoop());\n  function getIdisHold() {\n    return {\n      id: nanoid(),\n      isHeld: false\n    };\n  }\n  function idLoop() {\n    const idArrayButton = [];\n    for (let i = 0; i < 4; i++) {\n      idArrayButton.push(getIdisHold());\n    }\n    return idArrayButton;\n  }\n  const element = idButton.map(prev => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles,\n      className: \"main-btn\",\n      id: prev.id,\n      onClick: props.toggle,\n      children: \"proviamo\"\n    }, prev.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this);\n  });\n  function ChangeColor(id) {\n    setIdButton(prev => prev.map(get => {\n      return get.id === id ? {\n        ...get,\n        isHeld: !get.isHeld\n      } : get;\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Button, \"t8MFcYcXUelQBj9MVKdxhXCdmu8=\");\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","nanoid","Button","props","console","log","styles","backgroundColor","isHeld","idButton","setIdButton","useState","idLoop","getIdisHold","id","idArrayButton","i","push","element","map","prev","toggle","ChangeColor","get"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/button.js"],"sourcesContent":["import React from 'react'\r\nimport {nanoid} from 'nanoid'\r\n\r\nexport default function Button(props){\r\n    console.log(props)\r\n     const styles = { backgroundColor : props.isHeld ?  ' green' : '#FFF'}   \r\n    \r\n          \r\n        \r\n        const [idButton , setIdButton] = React.useState(idLoop())\r\n\r\n   function getIdisHold(){\r\n    return {id:nanoid() , isHeld:false}\r\n   }\r\n\r\n   function idLoop(){\r\n    const idArrayButton = []\r\n    for(let i = 0 ; i< 4 ; i++){\r\n        idArrayButton.push(getIdisHold())\r\n    }\r\n    return idArrayButton\r\n   }\r\n    \r\n    const element = idButton.map(prev =>{        \r\n        return  <button style={styles} className='main-btn' id={prev.id} key={prev.id} onClick={props.toggle}>proviamo</button>            \r\n             \r\n            \r\n    })\r\n    function ChangeColor(id){\r\n        setIdButton(prev=> prev.map(get => {\r\n            return get.id === id ? {...get , isHeld:!get.isHeld} : get\r\n        }))\r\n    }\r\n    return (\r\n    <div>\r\n        {element}\r\n    </div>\r\n    \r\n    ) \r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,QAAQ;AAAA;AAE7B,eAAe,SAASC,MAAM,CAACC,KAAK,EAAC;EAAA;EACjCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACjB,MAAMG,MAAM,GAAG;IAAEC,eAAe,EAAGJ,KAAK,CAACK,MAAM,GAAI,QAAQ,GAAG;EAAM,CAAC;EAIlE,MAAM,CAACC,QAAQ,EAAGC,WAAW,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAACC,MAAM,EAAE,CAAC;EAE9D,SAASC,WAAW,GAAE;IACrB,OAAO;MAACC,EAAE,EAACb,MAAM,EAAE;MAAGO,MAAM,EAAC;IAAK,CAAC;EACpC;EAEA,SAASI,MAAM,GAAE;IAChB,MAAMG,aAAa,GAAG,EAAE;IACxB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAE,CAAC,EAAGA,CAAC,EAAE,EAAC;MACvBD,aAAa,CAACE,IAAI,CAACJ,WAAW,EAAE,CAAC;IACrC;IACA,OAAOE,aAAa;EACrB;EAEC,MAAMG,OAAO,GAAGT,QAAQ,CAACU,GAAG,CAACC,IAAI,IAAG;IAChC,oBAAQ;MAAQ,KAAK,EAAEd,MAAO;MAAC,SAAS,EAAC,UAAU;MAAC,EAAE,EAAEc,IAAI,CAACN,EAAG;MAAe,OAAO,EAAEX,KAAK,CAACkB,MAAO;MAAA,UAAC;IAAQ,GAAxCD,IAAI,CAACN,EAAE;MAAA;MAAA;MAAA;IAAA,QAA0C;EAG3H,CAAC,CAAC;EACF,SAASQ,WAAW,CAACR,EAAE,EAAC;IACpBJ,WAAW,CAACU,IAAI,IAAGA,IAAI,CAACD,GAAG,CAACI,GAAG,IAAI;MAC/B,OAAOA,GAAG,CAACT,EAAE,KAAKA,EAAE,GAAG;QAAC,GAAGS,GAAG;QAAGf,MAAM,EAAC,CAACe,GAAG,CAACf;MAAM,CAAC,GAAGe,GAAG;IAC9D,CAAC,CAAC,CAAC;EACP;EACA,oBACA;IAAA,UACKL;EAAO;IAAA;IAAA;IAAA;EAAA,QACN;AAGV;AAAC,GApCuBhB,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}