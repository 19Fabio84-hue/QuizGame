{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst AnswerHtml = props => {\n  const buttons = [];\n  function GetButtons() {\n    for (let i = 0; i < props.answers.length; i++) {\n      const styles = {\n        backgroundColor: props.isHeld ? 'green' : 'white'\n      };\n      const buttonId = {\n        id: nanoid(),\n        value: props.answers[i],\n        isHeld: false\n      };\n      const button = /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: props.toggle,\n        value: buttonId.isHeld,\n        id: buttonId.id,\n        className: \"main-btn\",\n        children: props.answers[i]\n      }, buttonId.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 30\n      }, this);\n      buttons.push(button);\n    }\n    return buttons;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"main-title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-flex\",\n      children: GetButtons()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = AnswerHtml;\nexport default function GetDataHtml() {\n  _s();\n  const [answer, setAnswer] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://opentdb.com/api.php?amount=5').then(response => response.json()).then(data => {\n      const correctAnswer = data.results.map(pio => pio.correct_answer);\n      const IncorrectArrey = data.results.map(pio => pio.incorrect_answers);\n      const newId = nanoid();\n      const typeArray = data.results.map(pio => pio.type);\n      const question = data.results.map(pio => pio.question);\n      const allAnswer = correctAnswer.map((get, index) => ({\n        title: question[index],\n        correct: {\n          value: get,\n          id: newId\n        },\n        Incorrec: [IncorrectArrey[index].map(pio => ({\n          id: newId,\n          value: pio\n        }))],\n        isHeld: false,\n        type: typeArray[index],\n        id: newId,\n        answers: [...IncorrectArrey[index], correctAnswer[index]]\n      }));\n      setAnswer(allAnswer);\n    });\n  }, []);\n  console.log(answer);\n  const finalAnswer = answer.map(x => {\n    return /*#__PURE__*/_createElement(AnswerHtml, {\n      ...x,\n      key: nanoid(),\n      toggle: () => ChangeColor(x.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    });\n  });\n  function ChangeColor(id) {\n    setAnswer(prev => prev.map(newPrev => {\n      return newPrev.id === id ? {\n        ...newPrev,\n        isHeld: !newPrev.isHeld\n      } : newPrev;\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: finalAnswer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(GetDataHtml, \"Y2SfHEM8URI8tNHEfF5r19ufvoY=\");\n_c2 = GetDataHtml;\nvar _c, _c2;\n$RefreshReg$(_c, \"AnswerHtml\");\n$RefreshReg$(_c2, \"GetDataHtml\");","map":{"version":3,"names":["React","nanoid","AnswerHtml","props","buttons","GetButtons","i","answers","length","styles","backgroundColor","isHeld","buttonId","id","value","button","toggle","push","title","GetDataHtml","answer","setAnswer","useState","useEffect","fetch","then","response","json","data","correctAnswer","results","map","pio","correct_answer","IncorrectArrey","incorrect_answers","newId","typeArray","type","question","allAnswer","get","index","correct","Incorrec","console","log","finalAnswer","x","ChangeColor","prev","newPrev"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\n\r\nconst AnswerHtml = (props) =>{\r\n\r\n    const buttons = []\r\n    function GetButtons(){\r\n        for (let i = 0 ; i < props.answers.length ; i++){\r\n            const styles = {backgroundColor : props.isHeld ? 'green' :'white'}\r\n            const buttonId= {id:nanoid() , value:props.answers[i] , isHeld:false}\r\n            const button = ( <button style={styles} onClick={props.toggle} key={buttonId.id} value={buttonId.isHeld} id={buttonId.id} className='main-btn'>{props.answers[i]}</button>)\r\n            buttons.push(button)\r\n        }\r\n        return buttons\r\n    }\r\n    \r\n    \r\n    \r\n      \r\n    \r\n    return (\r\n        <div>\r\n            <h3 className='main-title'>{props.title}</h3>\r\n            <div className='main-flex'>\r\n                {GetButtons()}\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function GetDataHtml(){\r\n\r\n    const [answer , setAnswer] = React.useState([])\r\n    React.useEffect(()=>{\r\n        fetch('https://opentdb.com/api.php?amount=5')\r\n        .then(response => response.json())\r\n        .then(data => {        \r\n            const correctAnswer = data.results.map(pio => pio.correct_answer)\r\n            const IncorrectArrey = data.results.map(pio => pio.incorrect_answers )\r\n            const newId = nanoid()\r\n            const typeArray = data.results.map(pio => pio.type)\r\n            const question = data.results.map(pio => pio.question)          \r\n            const allAnswer = correctAnswer.map((get , index) => ({\r\n              title:question[index] , correct:{value:get , id:newId}, Incorrec:[IncorrectArrey[index].map((pio) => ({id:newId , value:pio}))] ,isHeld : false , type:typeArray[index] , id:newId, answers : [...IncorrectArrey[index] , correctAnswer[index]]\r\n            }))\r\n         setAnswer(allAnswer)\r\n      })\r\n    },[])\r\n    console.log(answer) \r\n    \r\n    const finalAnswer = answer.map(x=>{\r\n        return <AnswerHtml {...x} key={nanoid()} toggle={()=>ChangeColor(x.id)}\r\n         />\r\n        })\r\n        function ChangeColor(id) {\r\n           setAnswer(prev => prev.map(newPrev => {\r\n            return newPrev.id === id ? {...newPrev , isHeld:!newPrev.isHeld} : newPrev \r\n           }))\r\n        }\r\n    return(\r\n        <main>{finalAnswer}</main>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}