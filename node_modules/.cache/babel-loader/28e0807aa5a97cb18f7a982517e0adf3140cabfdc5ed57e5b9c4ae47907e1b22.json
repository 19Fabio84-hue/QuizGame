{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nexport default function SetButtons() {\n  _s();\n  const [ButtonArray, setButtonArray] = React.useState(pushArray());\n  function getArray() {\n    return {\n      id: nanoid(),\n      isHeld: false\n    };\n  }\n  function pushArray() {\n    const dice = [];\n    for (let i = 0; i < 4; i++) {\n      dice.push(getArray());\n    }\n    return dice;\n  }\n}\n_s(SetButtons, \"bqpxCneFx3TdhoKt7e+MU93KmMw=\");\n_c = SetButtons;\nvar _c;\n$RefreshReg$(_c, \"SetButtons\");","map":{"version":3,"names":["React","nanoid","SetButtons","ButtonArray","setButtonArray","useState","pushArray","getArray","id","isHeld","dice","i","push"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/button/setButtons.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\n\r\nexport default function SetButtons(){\r\n    const [ButtonArray , setButtonArray ] =React.useState(pushArray())\r\n\r\n    function getArray(){\r\n        return ( {id:nanoid() , isHeld:false})\r\n    }\r\n    function pushArray(){\r\n        const dice=[]\r\n        for ( let i=0 ; i< 4 ; i++){\r\n            dice.push(getArray())\r\n        }\r\n        return dice\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAE/B,eAAe,SAASC,UAAU,GAAE;EAAA;EAChC,MAAM,CAACC,WAAW,EAAGC,cAAc,CAAE,GAAEJ,KAAK,CAACK,QAAQ,CAACC,SAAS,EAAE,CAAC;EAElE,SAASC,QAAQ,GAAE;IACf,OAAS;MAACC,EAAE,EAACP,MAAM,EAAE;MAAGQ,MAAM,EAAC;IAAK,CAAC;EACzC;EACA,SAASH,SAAS,GAAE;IAChB,MAAMI,IAAI,GAAC,EAAE;IACb,KAAM,IAAIC,CAAC,GAAC,CAAC,EAAGA,CAAC,GAAE,CAAC,EAAGA,CAAC,EAAE,EAAC;MACvBD,IAAI,CAACE,IAAI,CAACL,QAAQ,EAAE,CAAC;IACzB;IACA,OAAOG,IAAI;EACf;AACJ;AAAC,GAbuBR,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}