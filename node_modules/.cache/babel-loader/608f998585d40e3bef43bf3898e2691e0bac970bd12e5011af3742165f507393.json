{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\GitHub\\\\QuizGame\\\\src\\\\button\\\\setButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetButtons(props) {\n  _s();\n  const [isheld, setIsheld] = useState(false);\n  const buttonArray = pushArray();\n  function getArray() {\n    return {\n      id: nanoid(),\n      isheld: isheld\n    };\n  }\n  function pushArray() {\n    const dice = [];\n    for (let i = 0; i < 1; i++) {\n      dice.push(getArray());\n    }\n    return dice;\n  }\n  function Button(_ref) {\n    let {\n      value\n    } = _ref;\n    const handleClick = () => {\n      setIsheld(!isheld);\n    };\n    const styles = {\n      backgroundColor: isheld ? 'green' : '#FFF'\n    };\n    const stylesCheck = {\n      backgroundColor: props.correct ? 'rgba(27, 159, 62,0.8)' : isheld ? 'rgb(195, 40, 63,0.5)' : 'rgb(221, 224, 238)'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"main-btn\",\n        disabled: props.check && true,\n        style: props.check ? stylesCheck : styles,\n        onClick: handleClick,\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n  const buttonFinal = buttonArray.map(get => /*#__PURE__*/_jsxDEV(Button, {\n    check: props.check,\n    correct: props.correct,\n    isheld: get.isheld,\n    value: props.value\n  }, get.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: buttonFinal\n  }, void 0, false);\n}\n_s(SetButtons, \"bAEvKAUN6R0ohefJ0LBRutRsOXE=\");\n_c = SetButtons;\nvar _c;\n$RefreshReg$(_c, \"SetButtons\");","map":{"version":3,"names":["React","useState","nanoid","SetButtons","props","isheld","setIsheld","buttonArray","pushArray","getArray","id","dice","i","push","Button","value","handleClick","styles","backgroundColor","stylesCheck","correct","check","buttonFinal","map","get"],"sources":["C:/Users/UTENTE/Desktop/GitHub/QuizGame/src/button/setButtons.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport default function SetButtons(props) {\r\n    const [isheld, setIsheld] = useState(false);\r\n  const buttonArray = pushArray()\r\n\r\n  function getArray() {\r\n    return { id: nanoid(), isheld: isheld };\r\n  }\r\n\r\n  function pushArray() {\r\n    const dice = [];\r\n    for (let i = 0; i < 1; i++) {\r\n      dice.push(getArray());\r\n    }\r\n    return dice;\r\n  }\r\n\r\n  function Button({ value }) {\r\n    \r\n\r\n    const handleClick = () => {\r\n      setIsheld(!isheld);\r\n    };\r\n\r\n    const styles = { backgroundColor: isheld ? 'green' :  '#FFF' };\r\n    const stylesCheck = {\r\n      backgroundColor: props.correct ? 'rgba(27, 159, 62,0.8)' : isheld ? 'rgb(195, 40, 63,0.5)'  :'rgb(221, 224, 238)'  };\r\n   \r\n    return (\r\n      <div>\r\n       \r\n          <button className=\"main-btn\" disabled={props.check && true} style={props.check ? stylesCheck  : styles} onClick={handleClick}>\r\n            {value}\r\n          </button>\r\n     \r\n      </div>\r\n    );\r\n  }\r\n\r\n  const buttonFinal = buttonArray.map((get) => (    \r\n    <Button key={get.id} check={props.check} correct={props.correct} isheld={get.isheld} value={props.value} />\r\n    \r\n  ));\r\n\r\n  return <>{buttonFinal}</>;\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAAA;AAEhC,eAAe,SAASC,UAAU,CAACC,KAAK,EAAE;EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMM,WAAW,GAAGC,SAAS,EAAE;EAE/B,SAASC,QAAQ,GAAG;IAClB,OAAO;MAAEC,EAAE,EAAER,MAAM,EAAE;MAAEG,MAAM,EAAEA;IAAO,CAAC;EACzC;EAEA,SAASG,SAAS,GAAG;IACnB,MAAMG,IAAI,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BD,IAAI,CAACE,IAAI,CAACJ,QAAQ,EAAE,CAAC;IACvB;IACA,OAAOE,IAAI;EACb;EAEA,SAASG,MAAM,OAAY;IAAA,IAAX;MAAEC;IAAM,CAAC;IAGvB,MAAMC,WAAW,GAAG,MAAM;MACxBV,SAAS,CAAC,CAACD,MAAM,CAAC;IACpB,CAAC;IAED,MAAMY,MAAM,GAAG;MAAEC,eAAe,EAAEb,MAAM,GAAG,OAAO,GAAI;IAAO,CAAC;IAC9D,MAAMc,WAAW,GAAG;MAClBD,eAAe,EAAEd,KAAK,CAACgB,OAAO,GAAG,uBAAuB,GAAGf,MAAM,GAAG,sBAAsB,GAAG;IAAsB,CAAC;IAEtH,oBACE;MAAA,uBAEI;QAAQ,SAAS,EAAC,UAAU;QAAC,QAAQ,EAAED,KAAK,CAACiB,KAAK,IAAI,IAAK;QAAC,KAAK,EAAEjB,KAAK,CAACiB,KAAK,GAAGF,WAAW,GAAIF,MAAO;QAAC,OAAO,EAAED,WAAY;QAAA,UAC1HD;MAAK;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QAEP;EAEV;EAEA,MAAMO,WAAW,GAAGf,WAAW,CAACgB,GAAG,CAAEC,GAAG,iBACtC,QAAC,MAAM;IAAc,KAAK,EAAEpB,KAAK,CAACiB,KAAM;IAAC,OAAO,EAAEjB,KAAK,CAACgB,OAAQ;IAAC,MAAM,EAAEI,GAAG,CAACnB,MAAO;IAAC,KAAK,EAAED,KAAK,CAACW;EAAM,GAA3FS,GAAG,CAACd,EAAE;IAAA;IAAA;IAAA;EAAA,QAEpB,CAAC;EAEF,oBAAO;IAAA,UAAGY;EAAW,iBAAI;AAC3B;AAAC,GA5CuBnB,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}