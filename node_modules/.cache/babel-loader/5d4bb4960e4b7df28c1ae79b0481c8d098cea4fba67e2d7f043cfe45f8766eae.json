{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Quiz\\\\src\\\\component\\\\quiz.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst AnswerHtml = props => {\n  _s();\n  const [color, setColor] = React.useState([{\n    name: 'botton1',\n    isHeld: false\n  }, {\n    name: 'botton2',\n    isHeld: false\n  }, {\n    name: 'botton3',\n    isHeld: false\n  }, {\n    name: 'botton4',\n    isHeld: false\n  }]);\n  function Toggle(nome) {\n    setColor(prev => prev.map(p => {\n      return p.name === nome ? {\n        ...p,\n        isHeld: !p.isHeld\n      } : p;\n    }));\n  }\n  console.log(color);\n  const styles = {\n    backgroundColor: color.isHeld ? 'green' : ''\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"main-title\",\n      children: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: Toggle,\n        name: \"botton1\",\n        className: \"main-btn\",\n        children: props.incorrect_answers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: Toggle,\n        name: \"botton2\",\n        className: \"main-btn\",\n        children: props.incorrect_answers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: Toggle,\n        name: \"botton3\",\n        className: \"main-btn\",\n        children: props.incorrect_answers[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: Toggle,\n        name: \"botton4\",\n        className: \"main-btn\",\n        children: props.correct_answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(AnswerHtml, \"8G8rvK8+YoSrfXcJnbTwKpFPK0A=\");\n_c = AnswerHtml;\nexport default function GetDataHtml() {\n  _s2();\n  const [answer, setAnswer] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://opentdb.com/api.php?amount=5').then(response => response.json()).then(data => {\n      console.log(data);\n      setAnswer(() => {\n        return data.results.map(poi => {\n          return {\n            ...poi,\n            id: nanoid(),\n            isHeld: false\n          };\n        });\n      });\n    });\n  }, []);\n  console.log(answer);\n  const NewAnswer = answer.map(x => {\n    return /*#__PURE__*/_createElement(AnswerHtml, {\n      ...x,\n      key: x.id,\n      toggle: () => Toggle(color),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: NewAnswer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n// setAnswer(prev => prev.map(pre => {\n//     return pre.id === id ? {...pre  , isHeld:!pre.isHeld} : pre   })\n\n// )\n_s2(GetDataHtml, \"Y2SfHEM8URI8tNHEfF5r19ufvoY=\");\n_c2 = GetDataHtml;\nvar _c, _c2;\n$RefreshReg$(_c, \"AnswerHtml\");\n$RefreshReg$(_c2, \"GetDataHtml\");","map":{"version":3,"names":["React","nanoid","AnswerHtml","props","color","setColor","useState","name","isHeld","Toggle","nome","prev","map","p","console","log","styles","backgroundColor","question","incorrect_answers","correct_answer","GetDataHtml","answer","setAnswer","useEffect","fetch","then","response","json","data","results","poi","id","NewAnswer","x"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Quiz/src/component/quiz.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\n\r\nconst AnswerHtml = (props) =>{\r\n    const [color , setColor] = React.useState([{name:'botton1' ,isHeld:false},{name:'botton2' ,isHeld:false},{name:'botton3' ,isHeld:false},{name:'botton4' ,isHeld:false}])\r\n    function Toggle(nome){\r\n        setColor(prev => prev.map(p=> {\r\n            return p.name === nome ? {...p , isHeld:!p.isHeld}: p }))\r\n       \r\n    }\r\n    console.log(color)\r\n    const styles = {backgroundColor : color.isHeld ? 'green' :''}\r\n    return (\r\n        <div>\r\n            <h3 className='main-title'>{props.question}</h3>\r\n            <div className='main-flex'>\r\n                <button style={styles} onClick={Toggle} name='botton1' className='main-btn'>{props.incorrect_answers[0]}</button>\r\n                <button style={styles} onClick={Toggle} name='botton2' className='main-btn'>{props.incorrect_answers[1]}</button>\r\n                <button style={styles} onClick={Toggle} name='botton3' className='main-btn'>{props.incorrect_answers[2]}</button>\r\n                <button style={styles} onClick={Toggle} name='botton4' className='main-btn'>{props.correct_answer}</button>\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default function GetDataHtml(){\r\n    const [answer , setAnswer] = React.useState([])\r\n    React.useEffect(()=>{\r\n        fetch('https://opentdb.com/api.php?amount=5')\r\n        .then(response => response.json())\r\n        .then(data => {console.log(data)\r\n         setAnswer(() => {\r\n            return data.results.map(poi =>{\r\n                return {...poi , id:nanoid() , isHeld:false ,}\r\n            } )\r\n         })\r\n      })\r\n    },[])\r\n    console.log(answer)\r\n\r\n   \r\n    \r\n    const NewAnswer = answer.map(x=>{\r\n        return <AnswerHtml {...x} key={x.id} toggle={()=>Toggle(color)}\r\n         />\r\n        })\r\n    return(\r\n        <main>{NewAnswer}</main>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n // setAnswer(prev => prev.map(pre => {\r\n        //     return pre.id === id ? {...pre  , isHeld:!pre.isHeld} : pre   })\r\n           \r\n        // )\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}